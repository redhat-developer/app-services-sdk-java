name: Fetch API client for new changes
on:
  repository_dispatch:
    types: [openapi-spec-change]

jobs:
  generate_client:
    env:
      APP_SERVICES_TOKEN: ${{ secrets.APP_SERVICES_TOKEN }}
      BF2_TOKEN: ${{ secrets.BF2_TOKEN }}

    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v3
      - uses: actions/checkout@v3
      - name: Install jq
        run: sudo apt-get install jq
      - name: Fetch OpenAPI doc
        run: ./scripts/fetch_api.sh ${{ github.event.client_payload.download_url }}
      - uses: peter-evans/create-pull-request@v4
        with:
          title: "chore(openapi): update ${{ github.event.client_payload.id }} OpenAPI document"
          token: "${{ env.APP_SERVICES_TOKEN }}"
          commit-message: "fix(openapi): update ${{ github.event.client_payload.id }} OpenAPI document"
          author: "app-services-ci <app-services-ci@users.noreply.github.com>"
          branch: add-${{ github.event.client_payload.id }}-openapi
          branch-suffix: timestamp
          reviewers: '@redhat-developer/app-services-sdk-maintainers'
          body: |
            _This pull request was auto-generated_
            
            This PR adds the latest version OpenAPI document version for **${{ github.event.client_payload.id }}**.
            
            ## SDK update procedure

            ## SDK update procedure

            1. Review changes on OpenAPI file and validate if they are correct
            2. Perform manual changes if needed or apply local patches for the OpenAPI files 
            3. Merge PR 
            4. Merge automatically generated PR with source code when build passes
            6. Perform release on github with new changes
