---
openapi: 3.0.3
info:
  title: Red Hat Openshift SmartEvents Fleet Manager
  description: The API exposed by the fleet manager of the SmartEvents service.
  contact:
    name: Development Team
    email: openbridge-dev@redhat.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.0.1
tags:
- name: Bridges
  description: "The API that allow the user to retrieve, create or delete Bridge instances."
- name: Error Catalog
  description: List and get the error definitions from the error catalog.
- name: Processors
  description: "The API that allow the user to retrieve, create or delete Processors\
    \ of a Bridge instance."
- name: Schema Catalog
  description: The API that provide the catalog of the available action/source processors
    definition and their JSON schema.
- name: Shard
  description: The API that allow a shard to retrieve and update resources.
paths:
  /api/v1/bridges:
    get:
      tags:
      - Bridges
      summary: Get the list of Bridge instances
      description: Get the list of Bridge instances for the authenticated user.
      operationId: BridgesAPI_getBridges
      parameters:
      - name: name
        in: query
        schema:
          type: string
      - name: page
        in: query
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: size
        in: query
        schema:
          format: int32
          default: 100
          maximum: 100
          minimum: 1
          type: integer
      - name: status
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ManagedResourceStatus'
      responses:
        "200":
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BridgeListResponse'
        "400":
          description: Bad request.
          content:
            application/json: {}
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          description: Not found.
          content:
            application/json: {}
        "500":
          description: Internal error.
          content:
            application/json: {}
      security:
      - bearer: []
    post:
      tags:
      - Bridges
      summary: Create a Bridge instance
      description: Create a Bridge instance for the authenticated user.
      operationId: BridgesAPI_createBridge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BridgeRequest'
      responses:
        "202":
          description: Accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BridgeResponse'
        "400":
          description: Bad request.
          content:
            application/json: {}
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "500":
          description: Internal error.
          content:
            application/json: {}
      security:
      - bearer: []
  /api/v1/bridges/{bridgeId}:
    get:
      tags:
      - Bridges
      summary: Get a Bridge instance
      description: Get a Bridge instance of the authenticated user by ID.
      operationId: BridgesAPI_getBridge
      parameters:
      - name: bridgeId
        in: path
        required: true
        schema:
          minLength: 1
          type: string
          nullable: false
      responses:
        "200":
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BridgeResponse'
        "400":
          description: Bad request.
          content:
            application/json: {}
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          description: Not found.
          content:
            application/json: {}
        "500":
          description: Internal error.
          content:
            application/json: {}
      security:
      - bearer: []
    delete:
      tags:
      - Bridges
      summary: Delete a Bridge instance
      description: Delete a Bridge instance of the authenticated user by ID.
      operationId: BridgesAPI_deleteBridge
      parameters:
      - name: bridgeId
        in: path
        required: true
        schema:
          type: string
      responses:
        "202":
          description: Accepted.
        "400":
          description: Bad request.
          content:
            application/json: {}
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          description: Not found.
          content:
            application/json: {}
        "500":
          description: Internal error.
          content:
            application/json: {}
      security:
      - bearer: []
  /api/v1/bridges/{bridgeId}/processors:
    get:
      tags:
      - Processors
      summary: Get the list of Processors of a Bridge instance
      description: Get the list of Processors of a Bridge instance for the authenticated
        user.
      operationId: ProcessorsAPI_listProcessors
      parameters:
      - name: bridgeId
        in: path
        required: true
        schema:
          minLength: 1
          type: string
          nullable: false
      - name: name
        in: query
        schema:
          type: string
      - name: page
        in: query
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: size
        in: query
        schema:
          format: int32
          default: 100
          maximum: 100
          minimum: 1
          type: integer
      - name: status
        in: query
        schema:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ManagedResourceStatus'
      - name: type
        in: query
        schema:
          $ref: '#/components/schemas/ProcessorType'
      responses:
        "200":
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessorListResponse'
        "400":
          description: Bad request.
          content:
            application/json: {}
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          description: Not found.
          content:
            application/json: {}
        "500":
          description: Internal error.
          content:
            application/json: {}
      security:
      - bearer: []
    post:
      tags:
      - Processors
      summary: Create a Processor of a Bridge instance
      description: Create a Processor of a Bridge instance for the authenticated user.
      operationId: ProcessorsAPI_addProcessorToBridge
      parameters:
      - name: bridgeId
        in: path
        required: true
        schema:
          minLength: 1
          type: string
          nullable: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessorRequest'
      responses:
        "202":
          description: Accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessorResponse'
        "400":
          description: Bad request.
          content:
            application/json: {}
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          description: Not found.
          content:
            application/json: {}
        "500":
          description: Internal error.
          content:
            application/json: {}
      security:
      - bearer: []
  /api/v1/bridges/{bridgeId}/processors/{processorId}:
    get:
      tags:
      - Processors
      summary: Get a Processor of a Bridge instance
      description: Get a Processor of a Bridge instance for the authenticated user.
      operationId: ProcessorsAPI_getProcessor
      parameters:
      - name: bridgeId
        in: path
        required: true
        schema:
          minLength: 1
          type: string
          nullable: false
      - name: processorId
        in: path
        required: true
        schema:
          minLength: 1
          type: string
          nullable: false
      responses:
        "200":
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessorResponse'
        "400":
          description: Bad request.
          content:
            application/json: {}
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          description: Not found.
          content:
            application/json: {}
        "500":
          description: Internal error.
          content:
            application/json: {}
      security:
      - bearer: []
    put:
      tags:
      - Processors
      summary: Update a Processor instance Filter definition or Transformation template.
      description: Update a Processor instance Filter definition or Transformation
        template for the authenticated user.
      operationId: ProcessorsAPI_updateProcessor
      parameters:
      - name: bridgeId
        in: path
        required: true
        schema:
          minLength: 1
          type: string
          nullable: false
      - name: processorId
        in: path
        required: true
        schema:
          minLength: 1
          type: string
          nullable: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessorRequest'
      responses:
        "202":
          description: Accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessorResponse'
        "400":
          description: Bad request.
          content:
            application/json: {}
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          description: Not found.
          content:
            application/json: {}
        "500":
          description: Internal error.
          content:
            application/json: {}
      security:
      - bearer: []
    delete:
      tags:
      - Processors
      summary: Delete a Processor of a Bridge instance
      description: Delete a Processor of a Bridge instance for the authenticated user.
      operationId: ProcessorsAPI_deleteProcessor
      parameters:
      - name: bridgeId
        in: path
        required: true
        schema:
          type: string
      - name: processorId
        in: path
        required: true
        schema:
          type: string
      responses:
        "202":
          description: Accepted.
        "400":
          description: Bad request.
          content:
            application/json: {}
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          description: Not found.
          content:
            application/json: {}
        "500":
          description: Internal error.
          content:
            application/json: {}
      security:
      - bearer: []
  /api/v1/errors:
    get:
      tags:
      - Error Catalog
      summary: Get the list of errors.
      description: Get the list of errors from the error catalog.
      operationId: ErrorsAPI_getErrors
      parameters:
      - name: page
        in: query
        schema:
          format: int32
          default: 0
          minimum: 0
          type: integer
      - name: size
        in: query
        schema:
          format: int32
          default: 100
          maximum: 100
          minimum: 1
          type: integer
      responses:
        "200":
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
        "400":
          description: Bad request.
          content:
            application/json: {}
        "401":
          description: Unauthorized.
        "500":
          description: Internal error.
          content:
            application/json: {}
  /api/v1/errors/{id}:
    get:
      tags:
      - Error Catalog
      summary: Get an error from the error catalog.
      description: Get an error from the error catalog.
      operationId: ErrorsAPI_getError
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BridgeError'
        "400":
          description: Bad request.
          content:
            application/json: {}
        "401":
          description: Unauthorized.
        "500":
          description: Internal error.
          content:
            application/json: {}
  /api/v1/schemas:
    get:
      tags:
      - Schema Catalog
      summary: Get processor catalog
      description: Get the processor catalog with all the available sources and actions.
      operationId: SchemaAPI_getCatalog
      responses:
        "200":
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessorCatalogResponse'
        "400":
          description: Bad request.
          content:
            application/json: {}
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "500":
          description: Internal error.
          content:
            application/json: {}
      security:
      - bearer: []
  /api/v1/schemas/actions/{id}:
    get:
      tags:
      - Schema Catalog
      summary: Get action processor schema
      description: Get the action processor JSON schema.
      operationId: SchemaAPI_getActionProcessorSchema
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Success.
          content:
            application/json:
              schema:
                type: object
        "400":
          description: Bad request.
          content:
            application/json: {}
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "500":
          description: Internal error.
          content:
            application/json: {}
      security:
      - bearer: []
  /api/v1/schemas/sources/{id}:
    get:
      tags:
      - Schema Catalog
      summary: Get source processor schema
      description: Get the source processor JSON schema.
      operationId: SchemaAPI_getSourceProcessorSchema
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Success.
          content:
            application/json:
              schema:
                type: object
        "400":
          description: Bad request.
          content:
            application/json: {}
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "500":
          description: Internal error.
          content:
            application/json: {}
      security:
      - bearer: []
  /api/v1/shard/bridges:
    get:
      tags:
      - Shard
      summary: Get Bridge instances to be processed by a shard.
      description: Get Bridge instances to be processed by a shard.
      operationId: ShardBridgesSyncAPI_getBridges
      responses:
        "200":
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BridgeDTO'
        "400":
          description: Bad request.
          content:
            application/json: {}
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "500":
          description: Internal error.
          content:
            application/json: {}
      security:
      - bearer: []
    put:
      tags:
      - Shard
      summary: Update a Bridge instance.
      description: Update a Bridge instance.
      operationId: ShardBridgesSyncAPI_updateBridge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BridgeDTO'
      responses:
        "200":
          description: Success.
        "400":
          description: Bad request.
          content:
            application/json: {}
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "500":
          description: Internal error.
          content:
            application/json: {}
      security:
      - bearer: []
  /api/v1/shard/bridges/processors:
    get:
      tags:
      - Shard
      summary: Get Processors to be processed by a shard.
      description: Get Processors to be processed by a shard.
      operationId: ShardBridgesSyncAPI_getProcessors
      responses:
        "200":
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessorDTO'
        "400":
          description: Bad request.
          content:
            application/json: {}
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "500":
          description: Internal error.
          content:
            application/json: {}
      security:
      - bearer: []
    put:
      tags:
      - Shard
      summary: Update a Processor.
      description: Update a Processor.
      operationId: ShardBridgesSyncAPI_updateProcessorStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessorDTO'
      responses:
        "200":
          description: Success.
        "400":
          description: Bad request.
          content:
            application/json: {}
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "500":
          description: Internal error.
          content:
            application/json: {}
      security:
      - bearer: []
components:
  schemas:
    Action:
      required:
      - type
      - parameters
      type: object
      properties:
        type:
          type: string
          nullable: false
        parameters:
          type: object
    BaseFilter:
      required:
      - key
      type: object
      properties:
        type:
          type: string
        key:
          minLength: 1
          type: string
          nullable: false
    BridgeDTO:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        endpoint:
          type: string
        customerId:
          type: string
        owner:
          type: string
        status:
          $ref: '#/components/schemas/ManagedResourceStatus'
        kafkaConnection:
          $ref: '#/components/schemas/KafkaConnectionDTO'
    BridgeError:
      type: object
      properties:
        id:
          format: int32
          type: integer
        code:
          type: string
        reason:
          type: string
        type:
          $ref: '#/components/schemas/BridgeErrorType'
    BridgeErrorType:
      enum:
      - USER
      - PLATFORM
      type: string
    BridgeListResponse:
      type: object
      properties:
        kind:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/BridgeResponse'
        page:
          format: int64
          type: integer
        size:
          format: int64
          type: integer
        total:
          format: int64
          type: integer
    BridgeRequest:
      required:
      - name
      type: object
      properties:
        name:
          minLength: 1
          type: string
          nullable: false
        error_handler:
          $ref: '#/components/schemas/Action'
    BridgeResponse:
      type: object
      properties:
        kind:
          type: string
        id:
          type: string
        name:
          type: string
        href:
          type: string
        submitted_at:
          format: date-time
          type: string
        published_at:
          format: date-time
          type: string
        status:
          $ref: '#/components/schemas/ManagedResourceStatus'
        owner:
          type: string
        endpoint:
          type: string
        error_handler:
          $ref: '#/components/schemas/Action'
    ErrorListResponse:
      type: object
      properties:
        kind:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/ErrorResponse'
        page:
          format: int64
          type: integer
        size:
          format: int64
          type: integer
        total:
          format: int64
          type: integer
    ErrorResponse:
      type: object
      properties:
        kind:
          type: string
        id:
          type: string
        name:
          type: string
        href:
          type: string
        code:
          type: string
        reason:
          type: string
    KafkaConnectionDTO:
      type: object
      properties:
        bootstrapServers:
          type: string
        clientId:
          type: string
        clientSecret:
          type: string
        securityProtocol:
          type: string
        topic:
          type: string
        errorTopic:
          type: string
    ManagedResourceStatus:
      enum:
      - accepted
      - preparing
      - provisioning
      - ready
      - deprovision
      - deleting
      - deleted
      - failed
      type: string
    ProcessorCatalogResponse:
      type: object
      properties:
        kind:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/ProcessorSchemaEntryResponse'
    ProcessorDTO:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ProcessorType'
        id:
          type: string
        name:
          type: string
        definition:
          $ref: '#/components/schemas/ProcessorDefinition'
        bridgeId:
          type: string
        customerId:
          type: string
        owner:
          type: string
        status:
          $ref: '#/components/schemas/ManagedResourceStatus'
        kafkaConnection:
          $ref: '#/components/schemas/KafkaConnectionDTO'
    ProcessorDefinition:
      type: object
      properties:
        filters:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/BaseFilter'
        transformationTemplate:
          type: string
        requestedAction:
          $ref: '#/components/schemas/Action'
        requestedSource:
          $ref: '#/components/schemas/Source'
        resolvedAction:
          $ref: '#/components/schemas/Action'
    ProcessorListResponse:
      type: object
      properties:
        kind:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/ProcessorResponse'
        page:
          format: int64
          type: integer
        size:
          format: int64
          type: integer
        total:
          format: int64
          type: integer
    ProcessorRequest:
      required:
      - name
      type: object
      properties:
        name:
          minLength: 1
          type: string
          nullable: false
        filters:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/BaseFilter'
        transformationTemplate:
          type: string
        action:
          $ref: '#/components/schemas/Action'
        source:
          $ref: '#/components/schemas/Source'
    ProcessorResponse:
      type: object
      properties:
        kind:
          type: string
        id:
          type: string
        name:
          type: string
        href:
          type: string
        submitted_at:
          format: date-time
          type: string
        published_at:
          format: date-time
          type: string
        status:
          $ref: '#/components/schemas/ManagedResourceStatus'
        owner:
          type: string
        type:
          $ref: '#/components/schemas/ProcessorType'
        filters:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/BaseFilter'
        transformationTemplate:
          type: string
        action:
          $ref: '#/components/schemas/Action'
        source:
          $ref: '#/components/schemas/Source'
    ProcessorSchemaEntryResponse:
      type: object
      properties:
        kind:
          type: string
        id:
          type: string
        name:
          type: string
        description:
          type: string
        type:
          type: string
        href:
          type: string
    ProcessorType:
      enum:
      - source
      - sink
      - error_handler
      type: string
    Source:
      required:
      - type
      - parameters
      type: object
      properties:
        type:
          type: string
          nullable: false
        parameters:
          type: object
  securitySchemes:
    bearer:
      type: http
      scheme: Bearer
