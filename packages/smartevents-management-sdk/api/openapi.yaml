openapi: 3.0.3
info:
  contact:
    email: openbridge-dev@redhat.com
    name: Development Team
  description: The API exposed by the fleet manager of the SmartEvents service.
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  title: Red Hat Openshift SmartEvents Fleet Manager V2
  version: 0.0.1
servers:
- url: https://api.stage.openshift.com
- url: http://localhost:8000
- url: https://api.openshift.com
- url: /
tags:
- description: The API that allow the user to retrieve, create or delete Bridge instances.
  name: Bridges
- description: List Supported Cloud Providers and Regions
  name: Cloud Providers
- description: List and get the error definitions from the error catalog.
  name: Error Catalog
- description: The API that allow the user to retrieve, create or delete Processors
    of a Bridge instance.
  name: Processors
- description: The API that allow the user to retrieve, create or delete Sink Connectors
    to be used with smart-events.
  name: Sink Connectors
- description: The API that allow the user to retrieve, create or delete Source Connectors
    to be used with smart-events.
  name: Source Connectors
paths:
  /api/smartevents_mgmt/v2/bridges:
    get:
      description: Get the list of Bridge instances for the authenticated user.
      operationId: BridgesAPI_getBridges
      parameters:
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - explode: true
        in: query
        name: size
        required: false
        schema:
          default: 100
          format: int32
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - explode: true
        in: query
        name: status
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ManagedResourceStatus'
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BridgeListResponse'
          description: Success.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Bad request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Unauthorized.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Not found.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Internal error.
      security:
      - bearer: []
      summary: Get the list of Bridge instances
      tags:
      - Bridges
      x-accepts: application/json
    post:
      description: Create a Bridge instance for the authenticated user.
      operationId: BridgesAPI_createBridge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BridgeRequest'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BridgeResponse'
          description: Accepted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Bad request.
        "401":
          description: Unauthorized.
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Not enough quota.
        "403":
          description: Forbidden.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Internal error.
      security:
      - bearer: []
      summary: Create a Bridge instance
      tags:
      - Bridges
      x-contentType: application/json
      x-accepts: application/json
  /api/smartevents_mgmt/v2/bridges/{bridgeId}:
    delete:
      description: Delete a Bridge instance of the authenticated user by ID.
      operationId: BridgesAPI_deleteBridge
      parameters:
      - explode: false
        in: path
        name: bridgeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          description: Accepted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Bad request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Not found.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Internal error.
      security:
      - bearer: []
      summary: Delete a Bridge instance
      tags:
      - Bridges
      x-accepts: application/json
    get:
      description: Get a Bridge instance of the authenticated user by ID.
      operationId: BridgesAPI_getBridge
      parameters:
      - explode: false
        in: path
        name: bridgeId
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BridgeResponse'
          description: Success.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Bad request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Not found.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Internal error.
      security:
      - bearer: []
      summary: Get a Bridge instance
      tags:
      - Bridges
      x-accepts: application/json
  /api/smartevents_mgmt/v2/bridges/{bridgeId}/processors:
    get:
      description: Get the list of Processors of a Bridge instance for the authenticated
        user.
      operationId: ProcessorsAPI_getProcessors
      parameters:
      - explode: false
        in: path
        name: bridgeId
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - explode: true
        in: query
        name: size
        required: false
        schema:
          default: 100
          format: int32
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - explode: true
        in: query
        name: status
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ManagedResourceStatus'
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessorListResponse'
          description: Success.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Bad request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Not found.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Internal error.
      security:
      - bearer: []
      summary: Get the list of Processors of a Bridge instance
      tags:
      - Processors
      x-accepts: application/json
    post:
      description: Create a Processor of a Bridge instance for the authenticated user.
      operationId: ProcessorsAPI_createProcessor
      parameters:
      - explode: false
        in: path
        name: bridgeId
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessorRequest'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessorResponse'
          description: Accepted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Bad request.
        "401":
          description: Unauthorized.
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Not enough quota.
        "403":
          description: Forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Not found.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Internal error.
      security:
      - bearer: []
      summary: Create a Processor of a Bridge instance
      tags:
      - Processors
      x-contentType: application/json
      x-accepts: application/json
  /api/smartevents_mgmt/v2/bridges/{bridgeId}/processors/{processorId}:
    delete:
      description: Delete a Processor of a Bridge instance for the authenticated user.
      operationId: ProcessorsAPI_deleteProcessor
      parameters:
      - explode: false
        in: path
        name: bridgeId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: processorId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          description: Accepted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Bad request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Not found.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Internal error.
      security:
      - bearer: []
      summary: Delete a Processor of a Bridge instance
      tags:
      - Processors
      x-accepts: application/json
    get:
      description: Get a Processor of a Bridge instance for the authenticated user.
      operationId: ProcessorsAPI_getProcessor
      parameters:
      - explode: false
        in: path
        name: bridgeId
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - explode: false
        in: path
        name: processorId
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessorResponse'
          description: Success.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Bad request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Not found.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Internal error.
      security:
      - bearer: []
      summary: Get a Processor of a Bridge instance
      tags:
      - Processors
      x-accepts: application/json
    put:
      description: Update a Processor instance for the authenticated user.
      operationId: ProcessorsAPI_updateProcessor
      parameters:
      - explode: false
        in: path
        name: bridgeId
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - explode: false
        in: path
        name: processorId
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessorRequest'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessorResponse'
          description: Accepted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Bad request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Not found.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Internal error.
      security:
      - bearer: []
      summary: Update a Processor instance.
      tags:
      - Processors
      x-contentType: application/json
      x-accepts: application/json
  /api/smartevents_mgmt/v2/bridges/{bridgeId}/sinks:
    get:
      description: Get the list of Sink Connector instances of a Bridge instance for
        the authenticated user.
      operationId: SinkConnectorsAPI_getSinkConnectors
      parameters:
      - explode: false
        in: path
        name: bridgeId
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - explode: true
        in: query
        name: size
        required: false
        schema:
          default: 100
          format: int32
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - explode: true
        in: query
        name: status
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ManagedResourceStatus'
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SinkConnectorListResponse'
          description: Success.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Bad request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Unauthorized.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Not found.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Internal error.
      security:
      - bearer: []
      summary: Get the list of Sink Connectors for a Bridge
      tags:
      - Sink Connectors
      x-accepts: application/json
    post:
      description: Create a Sink Connector of a Bridge instance for the authenticated
        user.
      operationId: SinkConnectorsAPI_createSinkConnector
      parameters:
      - explode: false
        in: path
        name: bridgeId
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectorRequest'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SinkConnectorResponse'
          description: Accepted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Bad request.
        "401":
          description: Unauthorized.
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Not enough quota.
        "403":
          description: Forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Not found.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Internal error.
      security:
      - bearer: []
      summary: Create a Sink Connector for a Bridge instance
      tags:
      - Sink Connectors
      x-contentType: application/json
      x-accepts: application/json
  /api/smartevents_mgmt/v2/bridges/{bridgeId}/sinks/{sinkId}:
    delete:
      description: Delete a Sink Connector of a Bridge instance for the authenticated
        user.
      operationId: SinkConnectorsAPI_deleteSinkConnector
      parameters:
      - explode: false
        in: path
        name: bridgeId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: sinkId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          description: Accepted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Bad request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Not found.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Internal error.
      security:
      - bearer: []
      summary: Delete a Sink Connector of a Bridge instance
      tags:
      - Sink Connectors
      x-accepts: application/json
    get:
      description: Get a Sink Connector of a Bridge instance for the authenticated
        user.
      operationId: SinkConnectorsAPI_getSinkConnector
      parameters:
      - explode: false
        in: path
        name: bridgeId
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - explode: false
        in: path
        name: sinkId
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SinkConnectorResponse'
          description: Success.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Bad request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Not found.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Internal error.
      security:
      - bearer: []
      summary: Get a Sink Connector of a Bridge instance
      tags:
      - Sink Connectors
      x-accepts: application/json
    put:
      description: Update a Sink Connector instance for the authenticated user.
      operationId: SinkConnectorsAPI_updateSinkConnector
      parameters:
      - explode: false
        in: path
        name: bridgeId
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - explode: false
        in: path
        name: sinkId
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectorRequest'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SinkConnectorResponse'
          description: Accepted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Bad request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Not found.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Internal error.
      security:
      - bearer: []
      summary: Update a Sink Connector instance.
      tags:
      - Sink Connectors
      x-contentType: application/json
      x-accepts: application/json
  /api/smartevents_mgmt/v2/bridges/{bridgeId}/sources:
    get:
      description: Get the list of Source Connector instances of a Bridge instance
        instance for the authenticated user.
      operationId: SourceConnectorsAPI_getSourceConnectors
      parameters:
      - explode: false
        in: path
        name: bridgeId
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - explode: true
        in: query
        name: size
        required: false
        schema:
          default: 100
          format: int32
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - explode: true
        in: query
        name: status
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ManagedResourceStatus'
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceConnectorListResponse'
          description: Success.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Bad request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Unauthorized.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Not found.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Internal error.
      security:
      - bearer: []
      summary: Get the list of Sink Connectors for a Bridge
      tags:
      - Source Connectors
      x-accepts: application/json
    post:
      description: Create a Source Connector of a Bridge instance for the authenticated
        user.
      operationId: SourceConnectorsAPI_createSourceConnector
      parameters:
      - explode: false
        in: path
        name: bridgeId
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectorRequest'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceConnectorResponse'
          description: Accepted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Bad request.
        "401":
          description: Unauthorized.
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Not enough quota.
        "403":
          description: Forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Not found.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Internal error.
      security:
      - bearer: []
      summary: Create a Source Connector for a Bridge instance
      tags:
      - Source Connectors
      x-contentType: application/json
      x-accepts: application/json
  /api/smartevents_mgmt/v2/bridges/{bridgeId}/sources/{sourceId}:
    delete:
      description: Delete a Source Connector of a Bridge instance for the authenticated
        user.
      operationId: SourceConnectorsAPI_deleteSourceConnector
      parameters:
      - explode: false
        in: path
        name: bridgeId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: sourceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          description: Accepted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Bad request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Not found.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Internal error.
      security:
      - bearer: []
      summary: Delete a Source Connector of a Bridge instance
      tags:
      - Source Connectors
      x-accepts: application/json
    get:
      description: Get a Source Connector of a Bridge instance for the authenticated
        user.
      operationId: SourceConnectorsAPI_getSourceConnector
      parameters:
      - explode: false
        in: path
        name: bridgeId
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - explode: false
        in: path
        name: sourceId
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceConnectorResponse'
          description: Success.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Bad request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Not found.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Internal error.
      security:
      - bearer: []
      summary: Get a Source Connector of a Bridge instance
      tags:
      - Source Connectors
      x-accepts: application/json
    put:
      description: Update a Source Connector instance for the authenticated user.
      operationId: SourceConnectorsAPI_updateSourceConnector
      parameters:
      - explode: false
        in: path
        name: bridgeId
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - explode: false
        in: path
        name: sourceId
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectorRequest'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceConnectorResponse'
          description: Accepted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Bad request.
        "401":
          description: Unauthorized.
        "403":
          description: Forbidden.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Not found.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Internal error.
      security:
      - bearer: []
      summary: Update a Source Connector instance.
      tags:
      - Source Connectors
      x-contentType: application/json
      x-accepts: application/json
  /api/smartevents_mgmt/v2/cloud_providers:
    get:
      description: Returns the list of supported Cloud Providers.
      operationId: CloudProviderAPI_listCloudProviders
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - explode: true
        in: query
        name: size
        required: false
        schema:
          default: 100
          format: int32
          maximum: 100
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudProviderListResponse'
          description: Success.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Bad request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Internal error.
      summary: List Supported Cloud Providers.
      tags:
      - Cloud Providers
      x-accepts: application/json
  /api/smartevents_mgmt/v2/cloud_providers/{id}:
    get:
      description: Get details of the Cloud Provider specified by id.
      operationId: CloudProviderAPI_getCloudProvider
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudProviderListResponse'
          description: Success.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Bad request.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Not found.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Internal error.
      summary: Get Cloud Provider.
      tags:
      - Cloud Providers
      x-accepts: application/json
  /api/smartevents_mgmt/v2/cloud_providers/{id}/regions:
    get:
      description: Returns the list of supported Regions of the specified Cloud Provider.
      operationId: CloudProviderAPI_listCloudProviderRegions
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - explode: true
        in: query
        name: size
        required: false
        schema:
          default: 100
          format: int32
          maximum: 100
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudRegionListResponse'
          description: Success.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Bad request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Internal error.
      summary: List Supported Cloud Regions.
      tags:
      - Cloud Providers
      x-accepts: application/json
  /api/smartevents_mgmt/v2/errors:
    get:
      description: Get the list of errors from the error catalog.
      operationId: ErrorsAPI_getErrors
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
        style: form
      - explode: true
        in: query
        name: size
        required: false
        schema:
          default: 100
          format: int32
          maximum: 100
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorListResponse'
          description: Success.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Bad request.
        "401":
          description: Unauthorized.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Internal error.
      summary: Get the list of errors.
      tags:
      - Error Catalog
      x-accepts: application/json
  /api/smartevents_mgmt/v2/errors/{id}:
    get:
      description: Get an error from the error catalog.
      operationId: ErrorsAPI_getError
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BridgeError'
          description: Success.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Bad request.
        "401":
          description: Unauthorized.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsList'
          description: Internal error.
      summary: Get an error from the error catalog.
      tags:
      - Error Catalog
      x-accepts: application/json
components:
  schemas:
    BridgeError:
      example:
        reason: reason
        code: code
        id: 0
      properties:
        id:
          format: int32
          type: integer
        code:
          type: string
        reason:
          type: string
        type:
          $ref: '#/components/schemas/BridgeErrorType'
      type: object
    BridgeErrorInstance:
      properties:
        id:
          format: int32
          type: integer
        code:
          type: string
        reason:
          type: string
        type:
          $ref: '#/components/schemas/BridgeErrorType'
        uuid:
          type: string
      type: object
    BridgeErrorType:
      enum:
      - USER
      - PLATFORM
      type: string
    BridgeListResponse:
      example:
        total: 1
        size: 6
        kind: kind
        page: 0
        items:
        - owner: userName
          status_message: status_message
          submitted_at: 2022-03-10T12:15:50-04:00
          kind: kind
          cloud_provider: aws
          endpoint: https://example.com/bridge
          name: resourceName1
          id: id
          href: example.com/resource
          published_at: 2022-03-10T12:15:50-04:00
          modified_at: 2022-03-10T12:15:50-04:00
          region: us-east
          status: ""
        - owner: userName
          status_message: status_message
          submitted_at: 2022-03-10T12:15:50-04:00
          kind: kind
          cloud_provider: aws
          endpoint: https://example.com/bridge
          name: resourceName1
          id: id
          href: example.com/resource
          published_at: 2022-03-10T12:15:50-04:00
          modified_at: 2022-03-10T12:15:50-04:00
          region: us-east
          status: ""
      properties:
        kind:
          type: string
        items:
          items:
            $ref: '#/components/schemas/BridgeResponse'
          type: array
        page:
          format: int64
          type: integer
        size:
          format: int64
          type: integer
        total:
          format: int64
          type: integer
      required:
      - kind
      - page
      - size
      - total
      type: object
    BridgeRequest:
      example:
        name: bridge1
        cloud_provider: aws
        region: us-east-1
      properties:
        name:
          description: The name of the bridge
          example: bridge1
          minLength: 1
          type: string
        cloud_provider:
          description: The cloud provider where the bridge resides
          example: aws
          minLength: 1
          type: string
        region:
          description: The cloud provider region where the bridge resides
          example: us-east-1
          minLength: 1
          type: string
      required:
      - cloud_provider
      - name
      - region
      type: object
    BridgeResponse:
      example:
        owner: userName
        status_message: status_message
        submitted_at: 2022-03-10T12:15:50-04:00
        kind: kind
        cloud_provider: aws
        endpoint: https://example.com/bridge
        name: resourceName1
        id: id
        href: example.com/resource
        published_at: 2022-03-10T12:15:50-04:00
        modified_at: 2022-03-10T12:15:50-04:00
        region: us-east
        status: ""
      properties:
        kind:
          description: The kind (type) of this resource
          type: string
        id:
          description: The unique identifier of this resource
          type: string
        name:
          description: The name of this resource
          example: resourceName1
          type: string
        href:
          description: The URL of this resource, without the protocol
          example: example.com/resource
          type: string
        submitted_at:
          example: 2022-03-10T12:15:50-04:00
          format: date-time
          type: string
        published_at:
          example: 2022-03-10T12:15:50-04:00
          format: date-time
          type: string
        modified_at:
          example: 2022-03-10T12:15:50-04:00
          format: date-time
          type: string
        status:
          allOf:
          - $ref: '#/components/schemas/ManagedResourceStatus'
          - description: The status of this resource
            example: ready
        owner:
          description: The user that owns this resource
          example: userName
          type: string
        endpoint:
          description: The HTTPS endpoint on which the bridge accepts events
          example: https://example.com/bridge
          type: string
        cloud_provider:
          description: The cloud provider where the bridge resides
          example: aws
          type: string
        region:
          description: The cloud provider region where the bridge resides
          example: us-east
          type: string
        status_message:
          description: A detailed status message in case there is a problem with the
            bridge
          type: string
      required:
      - href
      - id
      - kind
      - name
      - owner
      - status
      - submitted_at
      type: object
    CloudProviderListResponse:
      example:
        total: 1
        size: 6
        kind: kind
        page: 0
        items:
        - kind: kind
          name: resourceName1
          id: id
          href: example.com/resource
          display_name: display_name
          enabled: true
        - kind: kind
          name: resourceName1
          id: id
          href: example.com/resource
          display_name: display_name
          enabled: true
      properties:
        kind:
          type: string
        items:
          items:
            $ref: '#/components/schemas/CloudProviderResponse'
          type: array
        page:
          format: int64
          type: integer
        size:
          format: int64
          type: integer
        total:
          format: int64
          type: integer
      required:
      - kind
      - page
      - size
      - total
      type: object
    CloudProviderResponse:
      example:
        kind: kind
        name: resourceName1
        id: id
        href: example.com/resource
        display_name: display_name
        enabled: true
      properties:
        kind:
          description: The kind (type) of this resource
          type: string
        id:
          description: The unique identifier of this resource
          type: string
        name:
          description: The name of this resource
          example: resourceName1
          type: string
        href:
          description: The URL of this resource, without the protocol
          example: example.com/resource
          type: string
        display_name:
          type: string
        enabled:
          type: boolean
      required:
      - display_name
      - enabled
      - href
      - id
      - kind
      - name
      type: object
    CloudRegionListResponse:
      example:
        total: 1
        size: 6
        kind: kind
        page: 0
        items:
        - kind: kind
          name: name
          display_name: display_name
          enabled: true
        - kind: kind
          name: name
          display_name: display_name
          enabled: true
      properties:
        kind:
          type: string
        items:
          items:
            $ref: '#/components/schemas/CloudRegionResponse'
          type: array
        page:
          format: int64
          type: integer
        size:
          format: int64
          type: integer
        total:
          format: int64
          type: integer
      required:
      - kind
      - page
      - size
      - total
      type: object
    CloudRegionResponse:
      example:
        kind: kind
        name: name
        display_name: display_name
        enabled: true
      properties:
        kind:
          type: string
        name:
          type: string
        display_name:
          type: string
        enabled:
          type: boolean
      required:
      - display_name
      - enabled
      - kind
      - name
      type: object
    ConnectorRequest:
      example:
        connector: '{}'
        name: my-connector
        connector_type_id: slack_sink_0.1
      properties:
        name:
          description: The name of the connector
          example: my-connector
          minLength: 1
          type: string
        connector_type_id:
          description: The name of the connector
          example: slack_sink_0.1
          minLength: 1
          type: string
        connector:
          description: The Connector configuration payload
          type: object
      required:
      - connector
      - connector_type_id
      - name
      type: object
    Error:
      example:
        reason: reason
        code: code
        kind: kind
        name: resourceName1
        id: id
        href: example.com/resource
      properties:
        kind:
          description: The kind (type) of this resource
          type: string
        id:
          description: The unique identifier of this resource
          type: string
        name:
          description: The name of this resource
          example: resourceName1
          type: string
        href:
          description: The URL of this resource, without the protocol
          example: example.com/resource
          type: string
        code:
          type: string
        reason:
          type: string
      required:
      - href
      - id
      - kind
      - name
      - reason
      type: object
    ErrorListResponse:
      example:
        total: 1
        size: 6
        kind: kind
        page: 0
        items:
        - reason: reason
          code: code
          kind: kind
          name: resourceName1
          id: id
          href: example.com/resource
        - reason: reason
          code: code
          kind: kind
          name: resourceName1
          id: id
          href: example.com/resource
      properties:
        kind:
          type: string
        items:
          items:
            $ref: '#/components/schemas/Error'
          type: array
        page:
          format: int64
          type: integer
        size:
          format: int64
          type: integer
        total:
          format: int64
          type: integer
      required:
      - kind
      - page
      - size
      - total
      type: object
    ErrorsList:
      properties:
        kind:
          type: string
        items:
          items:
            $ref: '#/components/schemas/Error'
          type: array
      required:
      - kind
      type: object
    List:
      allOf:
      - $ref: '#/components/schemas/ListResponse'
      - $ref: '#/components/schemas/List_allOf'
    ListResponse:
      properties:
        kind:
          type: string
        items:
          items:
            type: object
          type: array
      required:
      - kind
      type: object
    ManagedResourceStatus:
      enum:
      - accepted
      - preparing
      - provisioning
      - ready
      - update_accepted
      - update_preparing
      - update_provisioning
      - deprovision
      - deleting
      - deleted
      - failed
      type: string
    ObjectReference:
      properties:
        kind:
          description: The kind (type) of this resource
          type: string
        id:
          description: The unique identifier of this resource
          type: string
        name:
          description: The name of this resource
          example: resourceName1
          type: string
        href:
          description: The URL of this resource, without the protocol
          example: example.com/resource
          type: string
      required:
      - href
      - id
      - kind
      - name
      type: object
    ProcessingErrorListResponse:
      properties:
        kind:
          type: string
        items:
          items:
            $ref: '#/components/schemas/ProcessingErrorResponse'
          type: array
        page:
          format: int64
          type: integer
        size:
          format: int64
          type: integer
        total:
          format: int64
          type: integer
      required:
      - kind
      - page
      - size
      - total
      type: object
    ProcessingErrorResponse:
      properties:
        recorded_at:
          example: 2022-03-10T12:15:50-04:00
          format: date-time
          type: string
        headers:
          additionalProperties:
            type: string
          type: object
        payload:
          type: object
      type: object
    ProcessorListResponse:
      example:
        total: 1
        size: 6
        kind: kind
        page: 0
        items:
        - owner: userName
          status_message: status_message
          submitted_at: 2022-03-10T12:15:50-04:00
          flows: '{}'
          kind: kind
          name: resourceName1
          id: id
          href: example.com/resource
          published_at: 2022-03-10T12:15:50-04:00
          modified_at: 2022-03-10T12:15:50-04:00
          status: ""
        - owner: userName
          status_message: status_message
          submitted_at: 2022-03-10T12:15:50-04:00
          flows: '{}'
          kind: kind
          name: resourceName1
          id: id
          href: example.com/resource
          published_at: 2022-03-10T12:15:50-04:00
          modified_at: 2022-03-10T12:15:50-04:00
          status: ""
      properties:
        kind:
          type: string
        items:
          items:
            $ref: '#/components/schemas/ProcessorResponse'
          type: array
        page:
          format: int64
          type: integer
        size:
          format: int64
          type: integer
        total:
          format: int64
          type: integer
      required:
      - kind
      - page
      - size
      - total
      type: object
    ProcessorRequest:
      example:
        flows: '{}'
        name: processor1
      properties:
        name:
          description: The name of the processor
          example: processor1
          minLength: 1
          type: string
        flows:
          description: The Camel YAML DSL code, formatted as JSON, that defines the
            flows in the processor
          type: object
      required:
      - flows
      - name
      type: object
    ProcessorResponse:
      example:
        owner: userName
        status_message: status_message
        submitted_at: 2022-03-10T12:15:50-04:00
        flows: '{}'
        kind: kind
        name: resourceName1
        id: id
        href: example.com/resource
        published_at: 2022-03-10T12:15:50-04:00
        modified_at: 2022-03-10T12:15:50-04:00
        status: ""
      properties:
        kind:
          description: The kind (type) of this resource
          type: string
        id:
          description: The unique identifier of this resource
          type: string
        name:
          description: The name of this resource
          example: resourceName1
          type: string
        href:
          description: The URL of this resource, without the protocol
          example: example.com/resource
          type: string
        submitted_at:
          example: 2022-03-10T12:15:50-04:00
          format: date-time
          type: string
        published_at:
          example: 2022-03-10T12:15:50-04:00
          format: date-time
          type: string
        modified_at:
          example: 2022-03-10T12:15:50-04:00
          format: date-time
          type: string
        status:
          allOf:
          - $ref: '#/components/schemas/ManagedResourceStatus'
          - description: The status of this resource
            example: ready
        owner:
          description: The user that owns this resource
          example: userName
          type: string
        flows:
          description: The Camel YAML DSL code, formatted as JSON, that defines the
            flows in the processor
          type: object
        status_message:
          type: string
      required:
      - flows
      - href
      - id
      - kind
      - name
      - owner
      - status
      - submitted_at
      type: object
    SinkConnectorListResponse:
      example:
        total: 1
        size: 6
        kind: kind
        page: 0
        items:
        - owner: userName
          status_message: status_message
          submitted_at: 2022-03-10T12:15:50-04:00
          kind: kind
          connector: '{}'
          name: resourceName1
          id: id
          href: example.com/resource
          published_at: 2022-03-10T12:15:50-04:00
          modified_at: 2022-03-10T12:15:50-04:00
          status: ""
          connector_type_id: slack_sink_0.1
          uri_dsl: knative:my-id
        - owner: userName
          status_message: status_message
          submitted_at: 2022-03-10T12:15:50-04:00
          kind: kind
          connector: '{}'
          name: resourceName1
          id: id
          href: example.com/resource
          published_at: 2022-03-10T12:15:50-04:00
          modified_at: 2022-03-10T12:15:50-04:00
          status: ""
          connector_type_id: slack_sink_0.1
          uri_dsl: knative:my-id
      properties:
        kind:
          type: string
        items:
          items:
            $ref: '#/components/schemas/SinkConnectorResponse'
          type: array
        page:
          format: int64
          type: integer
        size:
          format: int64
          type: integer
        total:
          format: int64
          type: integer
      required:
      - kind
      - page
      - size
      - total
      type: object
    SinkConnectorResponse:
      example:
        owner: userName
        status_message: status_message
        submitted_at: 2022-03-10T12:15:50-04:00
        kind: kind
        connector: '{}'
        name: resourceName1
        id: id
        href: example.com/resource
        published_at: 2022-03-10T12:15:50-04:00
        modified_at: 2022-03-10T12:15:50-04:00
        status: ""
        connector_type_id: slack_sink_0.1
        uri_dsl: knative:my-id
      properties:
        kind:
          description: The kind (type) of this resource
          type: string
        id:
          description: The unique identifier of this resource
          type: string
        name:
          description: The name of this resource
          example: resourceName1
          type: string
        href:
          description: The URL of this resource, without the protocol
          example: example.com/resource
          type: string
        submitted_at:
          example: 2022-03-10T12:15:50-04:00
          format: date-time
          type: string
        published_at:
          example: 2022-03-10T12:15:50-04:00
          format: date-time
          type: string
        modified_at:
          example: 2022-03-10T12:15:50-04:00
          format: date-time
          type: string
        status:
          allOf:
          - $ref: '#/components/schemas/ManagedResourceStatus'
          - description: The status of this resource
            example: ready
        owner:
          description: The user that owns this resource
          example: userName
          type: string
        connector_type_id:
          description: The connector type
          example: slack_sink_0.1
          type: string
        connector:
          description: The Connector configuration payload
          type: object
        status_message:
          description: A detailed status message in case there is a problem with the
            connector
          type: string
        uri_dsl:
          description: The URI to be used in Camel DSL to send data to this sink
          example: knative:my-id
          type: string
      required:
      - connector
      - connector_type_id
      - href
      - id
      - kind
      - name
      - owner
      - status
      - submitted_at
      - uri_dsl
      type: object
    SourceConnectorListResponse:
      example:
        total: 1
        size: 6
        kind: kind
        page: 0
        items:
        - owner: userName
          status_message: status_message
          connector: '{}'
          submitted_at: 2022-03-10T12:15:50-04:00
          kind: kind
          name: resourceName1
          id: id
          href: example.com/resource
          published_at: 2022-03-10T12:15:50-04:00
          modified_at: 2022-03-10T12:15:50-04:00
          status: ""
          connector_type_id: slack_sink_0.1
        - owner: userName
          status_message: status_message
          connector: '{}'
          submitted_at: 2022-03-10T12:15:50-04:00
          kind: kind
          name: resourceName1
          id: id
          href: example.com/resource
          published_at: 2022-03-10T12:15:50-04:00
          modified_at: 2022-03-10T12:15:50-04:00
          status: ""
          connector_type_id: slack_sink_0.1
      properties:
        kind:
          type: string
        items:
          items:
            $ref: '#/components/schemas/SourceConnectorResponse'
          type: array
        page:
          format: int64
          type: integer
        size:
          format: int64
          type: integer
        total:
          format: int64
          type: integer
      required:
      - kind
      - page
      - size
      - total
      type: object
    SourceConnectorResponse:
      example:
        owner: userName
        status_message: status_message
        connector: '{}'
        submitted_at: 2022-03-10T12:15:50-04:00
        kind: kind
        name: resourceName1
        id: id
        href: example.com/resource
        published_at: 2022-03-10T12:15:50-04:00
        modified_at: 2022-03-10T12:15:50-04:00
        status: ""
        connector_type_id: slack_sink_0.1
      properties:
        kind:
          description: The kind (type) of this resource
          type: string
        id:
          description: The unique identifier of this resource
          type: string
        name:
          description: The name of this resource
          example: resourceName1
          type: string
        href:
          description: The URL of this resource, without the protocol
          example: example.com/resource
          type: string
        submitted_at:
          example: 2022-03-10T12:15:50-04:00
          format: date-time
          type: string
        published_at:
          example: 2022-03-10T12:15:50-04:00
          format: date-time
          type: string
        modified_at:
          example: 2022-03-10T12:15:50-04:00
          format: date-time
          type: string
        status:
          allOf:
          - $ref: '#/components/schemas/ManagedResourceStatus'
          - description: The status of this resource
            example: ready
        owner:
          description: The user that owns this resource
          example: userName
          type: string
        connector_type_id:
          description: The connector type
          example: slack_sink_0.1
          type: string
        connector:
          description: The Connector configuration payload
          type: object
        status_message:
          description: A detailed status message in case there is a problem with the
            connector
          type: string
      required:
      - connector
      - connector_type_id
      - href
      - id
      - kind
      - name
      - owner
      - status
      - submitted_at
      type: object
    ZonedDateTime:
      example: 2022-03-10T12:15:50-04:00
      format: date-time
      type: string
    List_allOf:
      properties:
        page:
          format: int64
          type: integer
        size:
          format: int64
          type: integer
        total:
          format: int64
          type: integer
      required:
      - page
      - size
      - total
      type: object
  securitySchemes:
    bearer:
      scheme: Bearer
      type: http

