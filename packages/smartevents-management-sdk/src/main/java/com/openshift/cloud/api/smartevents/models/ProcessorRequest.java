/*
 * Red Hat Openshift SmartEvents Fleet Manager V2
 * The API exposed by the fleet manager of the SmartEvents service.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: openbridge-dev@redhat.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.openshift.cloud.api.smartevents.models;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ProcessorRequest
 */
@JsonPropertyOrder({
  ProcessorRequest.JSON_PROPERTY_NAME,
  ProcessorRequest.JSON_PROPERTY_FLOWS
})
@JsonTypeName("ProcessorRequest")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ProcessorRequest {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_FLOWS = "flows";
  private Object flows;

  public ProcessorRequest() { 
  }

  public ProcessorRequest name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The name of the processor
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "processor1", required = true, value = "The name of the processor")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public ProcessorRequest flows(Object flows) {
    
    this.flows = flows;
    return this;
  }

   /**
   * The Camel YAML DSL code, formatted as JSON, that defines the flows in the processor
   * @return flows
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The Camel YAML DSL code, formatted as JSON, that defines the flows in the processor")
  @JsonProperty(JSON_PROPERTY_FLOWS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getFlows() {
    return flows;
  }


  @JsonProperty(JSON_PROPERTY_FLOWS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFlows(Object flows) {
    this.flows = flows;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProcessorRequest processorRequest = (ProcessorRequest) o;
    return Objects.equals(this.name, processorRequest.name) &&
        Objects.equals(this.flows, processorRequest.flows);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, flows);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProcessorRequest {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    flows: ").append(toIndentedString(flows)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

