/*
 * Connector Service Fleet Manager
 * Connector Service Fleet Manager is a Rest API to manage connectors.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.openshift.cloud.api.connector.models;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.openshift.cloud.api.connector.models.ConnectorNamespaceState;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ConnectorNamespaceStatus
 */
@JsonPropertyOrder({
  ConnectorNamespaceStatus.JSON_PROPERTY_STATE,
  ConnectorNamespaceStatus.JSON_PROPERTY_VERSION,
  ConnectorNamespaceStatus.JSON_PROPERTY_CONNECTORS_DEPLOYED,
  ConnectorNamespaceStatus.JSON_PROPERTY_ERROR
})
@JsonTypeName("ConnectorNamespaceStatus")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ConnectorNamespaceStatus {
  public static final String JSON_PROPERTY_STATE = "state";
  private ConnectorNamespaceState state;

  public static final String JSON_PROPERTY_VERSION = "version";
  private String version;

  public static final String JSON_PROPERTY_CONNECTORS_DEPLOYED = "connectors_deployed";
  private Integer connectorsDeployed;

  public static final String JSON_PROPERTY_ERROR = "error";
  private String error;

  public ConnectorNamespaceStatus() { 
  }

  public ConnectorNamespaceStatus state(ConnectorNamespaceState state) {
    
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ConnectorNamespaceState getState() {
    return state;
  }


  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setState(ConnectorNamespaceState state) {
    this.state = state;
  }


  public ConnectorNamespaceStatus version(String version) {
    
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVersion() {
    return version;
  }


  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVersion(String version) {
    this.version = version;
  }


  public ConnectorNamespaceStatus connectorsDeployed(Integer connectorsDeployed) {
    
    this.connectorsDeployed = connectorsDeployed;
    return this;
  }

   /**
   * Get connectorsDeployed
   * @return connectorsDeployed
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_CONNECTORS_DEPLOYED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getConnectorsDeployed() {
    return connectorsDeployed;
  }


  @JsonProperty(JSON_PROPERTY_CONNECTORS_DEPLOYED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setConnectorsDeployed(Integer connectorsDeployed) {
    this.connectorsDeployed = connectorsDeployed;
  }


  public ConnectorNamespaceStatus error(String error) {
    
    this.error = error;
    return this;
  }

   /**
   * Get error
   * @return error
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getError() {
    return error;
  }


  @JsonProperty(JSON_PROPERTY_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setError(String error) {
    this.error = error;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConnectorNamespaceStatus connectorNamespaceStatus = (ConnectorNamespaceStatus) o;
    return Objects.equals(this.state, connectorNamespaceStatus.state) &&
        Objects.equals(this.version, connectorNamespaceStatus.version) &&
        Objects.equals(this.connectorsDeployed, connectorNamespaceStatus.connectorsDeployed) &&
        Objects.equals(this.error, connectorNamespaceStatus.error);
  }

  @Override
  public int hashCode() {
    return Objects.hash(state, version, connectorsDeployed, error);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConnectorNamespaceStatus {\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    connectorsDeployed: ").append(toIndentedString(connectorsDeployed)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

