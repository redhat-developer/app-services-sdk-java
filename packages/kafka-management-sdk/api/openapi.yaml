openapi: 3.0.0
info:
  contact:
    email: rhosak-support@redhat.com
    name: Red Hat OpenShift Streams for Apache Kafka Support
  description: Kafka Management API is a REST API to manage Kafka instances
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  title: Kafka Management API
  version: 1.15.0
servers:
- description: Main (production) server
  url: https://api.openshift.com
- description: Staging server
  url: https://api.stage.openshift.com
- description: localhost
  url: http://localhost:8000
- description: current domain
  url: /
tags:
- description: Errors returned by the API.
  name: errors
- description: Security related endpoints.
  name: security
- description: Enterprise data plane clusters registration and management endpoints.
  name: enterprise-dataplane-clusters
paths:
  /api/kafkas_mgmt/v1:
    get:
      description: Returns the kafka Service Fleet Manager API version metadata
      operationId: getVersionMetadata
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionMetadata'
          description: Version metadata
      x-accepts: application/json
  /api/kafkas_mgmt/v1/errors/{id}:
    get:
      description: Returns the error by Id
      operationId: getErrorById
      parameters:
      - description: The ID of record
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Get error by Id
      tags:
      - errors
      x-accepts: application/json
  /api/kafkas_mgmt/v1/errors:
    get:
      description: Returns the list of possible API errors
      operationId: getErrors
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: List of possible errors
      tags:
      - errors
      x-accepts: application/json
  /api/kafkas_mgmt/v1/kafkas/{id}:
    delete:
      description: Deletes a Kafka request by ID
      operationId: deleteKafkaById
      parameters:
      - description: The ID of record
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Perform the action in an asynchronous manner
        explode: true
        in: query
        name: async
        required: true
        schema:
          type: boolean
        style: form
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Deleted
        "400":
          content:
            application/json:
              examples:
                "400DeletionExample":
                  $ref: '#/components/examples/400DeletionExample'
              schema:
                $ref: '#/components/schemas/Error'
          description: Validation errors occurred
        "401":
          content:
            application/json:
              examples:
                "401Example":
                  $ref: '#/components/examples/401Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "403":
          content:
            application/json:
              examples:
                "403Example":
                  $ref: '#/components/examples/403Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: User not authorized to access the service
        "404":
          content:
            application/json:
              examples:
                "404DeleteExample":
                  $ref: '#/components/examples/404DeleteExample'
              schema:
                $ref: '#/components/schemas/Error'
          description: No Kafka request with specified ID exists
        "500":
          content:
            application/json:
              examples:
                "500DeleteExample":
                  $ref: '#/components/examples/500DeleteExample'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error occurred
      security:
      - Bearer: []
      x-accepts: application/json
    get:
      description: Returns a Kafka request by ID
      operationId: getKafkaById
      parameters:
      - description: The ID of record
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                KafkaRequestGetResponseExample:
                  $ref: '#/components/examples/KafkaRequestExample'
                KafkaRequestGetResponseWithFailedCreationStatusExample:
                  $ref: '#/components/examples/KafkaRequestFailedCreationStatusExample'
              schema:
                $ref: '#/components/schemas/KafkaRequest'
          description: Kafka request found by ID
        "401":
          content:
            application/json:
              examples:
                "401Example":
                  $ref: '#/components/examples/401Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "403":
          content:
            application/json:
              examples:
                "403Example":
                  $ref: '#/components/examples/403Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: User not authorized to access the service
        "404":
          content:
            application/json:
              examples:
                "404Example":
                  $ref: '#/components/examples/404Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: No Kafka request with specified ID exists
        "500":
          content:
            application/json:
              examples:
                "500Example":
                  $ref: '#/components/examples/500Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error occurred
      security:
      - Bearer: []
      x-accepts: application/json
    patch:
      description: Update a Kafka instance by id
      operationId: updateKafkaById
      parameters:
      - description: The ID of record
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KafkaUpdateRequest'
        description: Update owner of kafka
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                KafkaRequestPostResponseExample:
                  $ref: '#/components/examples/KafkaRequestExample'
              schema:
                $ref: '#/components/schemas/KafkaRequest'
          description: Kafka updated by ID
        "400":
          content:
            application/json:
              examples:
                MissingParameterExample:
                  $ref: '#/components/examples/400MissingParameterExample'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "401":
          content:
            application/json:
              examples:
                "401Example":
                  $ref: '#/components/examples/401Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "403":
          content:
            application/json:
              examples:
                "403Example":
                  $ref: '#/components/examples/403Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: User is not authorised to access the service
        "404":
          content:
            application/json:
              examples:
                "404Example":
                  $ref: '#/components/examples/404Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: No Kafka found with the specified ID
        "500":
          content:
            application/json:
              examples:
                "500Example":
                  $ref: '#/components/examples/500Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error occurred
      security:
      - Bearer: []
      x-contentType: application/json
      x-accepts: application/json
  /api/kafkas_mgmt/v1/kafkas/{id}/promote:
    post:
      description: Promote a Kafka instance. Promotion is performed asynchronously.
        The `async` query parameter has to be set to `true`. Only kafka instances
        with an `eval` billing_model are supported
      operationId: promoteKafka
      parameters:
      - description: The ID of record
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Perform the action in an asynchronous manner. False by default.
        explode: true
        in: query
        name: async
        required: true
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            examples:
              KafkaPromoteRequestExample:
                $ref: '#/components/examples/KafkaPromoteRequestExample'
            schema:
              $ref: '#/components/schemas/KafkaPromoteRequest'
        description: Kafka promotion request
        required: true
      responses:
        "202":
          description: Kafka promotion request accepted
        "400":
          content:
            application/json:
              examples:
                "400CreationExample":
                  $ref: '#/components/examples/400CreationExample'
              schema:
                $ref: '#/components/schemas/Error'
          description: Validation errors occurred
        "401":
          content:
            application/json:
              examples:
                "401Example":
                  $ref: '#/components/examples/401Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "403":
          content:
            application/json:
              examples:
                "403Example":
                  $ref: '#/components/examples/403Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: User forbidden either because the user is not authorized to
            access the service.
        "404":
          content:
            application/json:
              examples:
                "404Example":
                  $ref: '#/components/examples/404Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: The requested resource doesn't exist
        "409":
          content:
            application/json:
              examples:
                "409NameConflictExample":
                  $ref: '#/components/examples/409NameConflictExample'
              schema:
                $ref: '#/components/schemas/Error'
          description: A conflict has been detected with the usage of this resource
        "500":
          content:
            application/json:
              examples:
                "500Example":
                  $ref: '#/components/examples/500Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: A server error occurred while promoting the Kafka request
      security:
      - Bearer: []
      x-contentType: application/json
      x-accepts: application/json
  /api/kafkas_mgmt/v1/kafkas:
    get:
      description: Returns a list of Kafka requests
      operationId: getKafkas
      parameters:
      - description: Page index
        examples:
          page:
            value: "1"
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: string
        style: form
      - description: Number of items in each page
        examples:
          size:
            value: "100"
        explode: true
        in: query
        name: size
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Specifies the order by criteria. The syntax of this parameter is
          similar to the syntax of the `order by` clause of an SQL statement.
          Each query can be ordered by any of the following `kafkaRequests` fields:

          * bootstrap_server_host
          * admin_api_server_url
          * cloud_provider
          * cluster_id
          * created_at
          * href
          * id
          * instance_type
          * multi_az
          * name
          * organisation_id
          * owner
          * reauthentication_enabled
          * region
          * status
          * updated_at
          * version

          For example, to return all Kafka instances ordered by their name, use the following syntax:

          ```sql
          name asc
          ```

          To return all Kafka instances ordered by their name _and_ created date, use the following syntax:

          ```sql
          name asc, created_at asc
          ```

          If the parameter isn't provided, or if the value is empty, then
          the results are ordered by name.
        examples:
          orderBy:
            value: name asc
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: |
          Search criteria.

          The syntax of this parameter is similar to the syntax of the `where` clause of an
          SQL statement. Allowed fields in the search are `cloud_provider`, `name`, `owner`, `region`, and `status`. Allowed comparators are `<>`, `=`, `LIKE`, or `ILIKE`.
          Allowed joins are `AND` and `OR`. However, you can use a maximum of 10 joins in a search query.

          Examples:

          To return a Kafka instance with the name `my-kafka` and the region `aws`, use the following syntax:

          ```
          name = my-kafka and cloud_provider = aws
          ```[p-]

          To return a Kafka instance with a name that starts with `my`, use the following syntax:

          ```
          name like my%25
          ```

          To return a Kafka instance with a name containing `test` matching any character case combinations, use the following syntax:

          ```
          name ilike %25test%25
          ```

          If the parameter isn't provided, or if the value is empty, then all the Kafka instances
          that the user has permission to see are returned.

          Note. If the query is invalid, an error is returned.
        examples:
          search:
            value: name = my-kafka and cloud_provider = aws
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KafkaRequestList'
          description: A list of Kafka requests
        "400":
          content:
            application/json:
              examples:
                InvalidQueryExample:
                  $ref: '#/components/examples/400InvalidQueryExample'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "401":
          content:
            application/json:
              examples:
                "401Example":
                  $ref: '#/components/examples/401Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "403":
          content:
            application/json:
              examples:
                "403Example":
                  $ref: '#/components/examples/403Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: User not authorized to access the service
        "500":
          content:
            application/json:
              examples:
                "500Example":
                  $ref: '#/components/examples/500Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error occurred
      security:
      - Bearer: []
      x-accepts: application/json
    post:
      description: Creates a Kafka request
      operationId: createKafka
      parameters:
      - description: Perform the action in an asynchronous manner
        explode: true
        in: query
        name: async
        required: true
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            examples:
              USRegion:
                $ref: '#/components/examples/USRegionExample'
              EURegion:
                $ref: '#/components/examples/EURegionExample'
              ExplicitSizeExample:
                $ref: '#/components/examples/ExplicitSizeExample'
            schema:
              $ref: '#/components/schemas/KafkaRequestPayload'
        description: Kafka data
        required: true
      responses:
        "202":
          content:
            application/json:
              examples:
                KafkaRequestPostResponseExample:
                  $ref: '#/components/examples/KafkaRequestExample'
              schema:
                $ref: '#/components/schemas/KafkaRequest'
          description: Accepted
        "400":
          content:
            application/json:
              examples:
                "400CreationExample":
                  $ref: '#/components/examples/400CreationExample'
              schema:
                $ref: '#/components/schemas/Error'
          description: Validation errors occurred
        "401":
          content:
            application/json:
              examples:
                "401Example":
                  $ref: '#/components/examples/401Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "403":
          content:
            application/json:
              examples:
                "403Example":
                  $ref: '#/components/examples/403Example'
                "403MaxAllowedInstanceReachedExample":
                  $ref: '#/components/examples/403MaxAllowedInstanceReachedExample'
                "403TermsNotAcceptedExample":
                  $ref: '#/components/examples/403TermsNotAcceptedExample'
              schema:
                $ref: '#/components/schemas/Error'
          description: User forbidden either because the user is not authorized to
            access the service or because the maximum number of instances that can
            be created by this user has been reached.
        "404":
          content:
            application/json:
              examples:
                "404Example":
                  $ref: '#/components/examples/404Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: The requested resource doesn't exist
        "409":
          content:
            application/json:
              examples:
                "409NameConflictExample":
                  $ref: '#/components/examples/409NameConflictExample'
              schema:
                $ref: '#/components/schemas/Error'
          description: A conflict has been detected in the creation of this resource
        "500":
          content:
            application/json:
              examples:
                "500Example":
                  $ref: '#/components/examples/500Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: An unexpected error occurred while creating the Kafka request
      security:
      - Bearer: []
      x-contentType: application/json
      x-accepts: application/json
  /api/kafkas_mgmt/v1/cloud_providers:
    get:
      description: Returns the list of supported cloud providers
      operationId: getCloudProviders
      parameters:
      - description: Page index
        examples:
          page:
            value: "1"
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: string
        style: form
      - description: Number of items in each page
        examples:
          size:
            value: "100"
        explode: true
        in: query
        name: size
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudProviderList'
          description: Returned list of supported cloud providers
        "401":
          content:
            application/json:
              examples:
                "401Example":
                  $ref: '#/components/examples/401Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "500":
          content:
            application/json:
              examples:
                "500Example":
                  $ref: '#/components/examples/500Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error occurred
      security:
      - Bearer: []
      x-accepts: application/json
  /api/kafkas_mgmt/v1/cloud_providers/{id}/regions:
    get:
      description: Returns the list of supported regions of the supported cloud provider
      operationId: getCloudProviderRegions
      parameters:
      - description: The ID of record
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Page index
        examples:
          page:
            value: "1"
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: string
        style: form
      - description: Number of items in each page
        examples:
          size:
            value: "100"
        explode: true
        in: query
        name: size
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudRegionList'
          description: Returned list of supported cloud provider regions
        "401":
          content:
            application/json:
              examples:
                "401Example":
                  $ref: '#/components/examples/401Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "500":
          content:
            application/json:
              examples:
                "500Example":
                  $ref: '#/components/examples/500Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error occurred
      security:
      - Bearer: []
      x-accepts: application/json
  /api/kafkas_mgmt/v1/instance_types/{cloud_provider}/{cloud_region}:
    get:
      description: Returns the list of supported Kafka instance types and sizes filtered
        by cloud provider and region
      operationId: getInstanceTypesByCloudProviderAndRegion
      parameters:
      - description: ID of the supported cloud provider
        explode: false
        in: path
        name: cloud_provider
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the supported cloud provider region
        explode: false
        in: path
        name: cloud_region
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupportedKafkaInstanceTypesList'
          description: Returned list of supported Kafka instance types and sizes filtered
            by cloud provider and region
        "400":
          content:
            application/json:
              examples:
                "400UnsupportedRegionExample":
                  $ref: '#/components/examples/400UnsupportedRegionExample'
                "400UnsupportedProviderExample":
                  $ref: '#/components/examples/400UnsupportedProviderExample'
              schema:
                $ref: '#/components/schemas/Error'
          description: Cloud provider or region is not supported
        "401":
          content:
            application/json:
              examples:
                "401Example":
                  $ref: '#/components/examples/401Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "500":
          content:
            application/json:
              examples:
                "500Example":
                  $ref: '#/components/examples/500Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error occurred
      security:
      - Bearer: []
      x-accepts: application/json
  /api/kafkas_mgmt/v1/service_accounts:
    get:
      description: Returns a list of service accounts
      operationId: getServiceAccounts
      parameters:
      - description: client_id of the service account to be retrieved
        explode: true
        in: query
        name: client_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountList'
          description: Returned list of service accounts
        "401":
          content:
            application/json:
              examples:
                "401Example":
                  $ref: '#/components/examples/401Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "403":
          content:
            application/json:
              examples:
                "403Example":
                  $ref: '#/components/examples/403Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: User not authorized to access the service
        "500":
          content:
            application/json:
              examples:
                "500Example":
                  $ref: '#/components/examples/500Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error occurred
      security:
      - Bearer: []
      tags:
      - security
      x-accepts: application/json
    post:
      description: Creates a service account
      operationId: createServiceAccount
      requestBody:
        content:
          application/json:
            examples:
              sa:
                $ref: '#/components/examples/ServiceAccountRequestExample'
            schema:
              $ref: '#/components/schemas/ServiceAccountRequest'
        description: Service account request
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                serviceaccount:
                  $ref: '#/components/examples/ServiceAccountExample'
              schema:
                $ref: '#/components/schemas/ServiceAccount'
          description: Service account created
        "401":
          content:
            application/json:
              examples:
                "401Example":
                  $ref: '#/components/examples/401Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "403":
          content:
            application/json:
              examples:
                "403Example":
                  $ref: '#/components/examples/403Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: List of service accounts
        "500":
          content:
            application/json:
              examples:
                "500Example":
                  $ref: '#/components/examples/500Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error occurred
      security:
      - Bearer: []
      tags:
      - security
      x-contentType: application/json
      x-accepts: application/json
  /api/kafkas_mgmt/v1/service_accounts/{id}:
    delete:
      description: Deletes a service account by ID
      operationId: deleteServiceAccountById
      parameters:
      - description: The ID of record
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Deleted
        "401":
          content:
            application/json:
              examples:
                "401Example":
                  $ref: '#/components/examples/401Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "403":
          content:
            application/json:
              examples:
                "401Example":
                  $ref: '#/components/examples/403Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: User not authorized to access the service
        "500":
          content:
            application/json:
              examples:
                "500Example":
                  $ref: '#/components/examples/500Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error occurred
      security:
      - Bearer: []
      tags:
      - security
      x-accepts: application/json
    description: Get the service account with the given id
    get:
      description: Returned service account by ID
      operationId: getServiceAccountById
      parameters:
      - description: The ID of record
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                sa:
                  $ref: '#/components/examples/ServiceAccountByIdExample'
              schema:
                $ref: '#/components/schemas/ServiceAccount'
          description: Returns a service account by ID
      security:
      - Bearer: []
      tags:
      - security
      x-accepts: application/json
  /api/kafkas_mgmt/v1/service_accounts/{id}/reset_credentials:
    post:
      description: Resets the credentials for a service account by ID
      operationId: resetServiceAccountCreds
      parameters:
      - description: The ID of record
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                sa-reset:
                  $ref: '#/components/examples/ServiceAccountExample'
              schema:
                $ref: '#/components/schemas/ServiceAccount'
          description: Reset credentials
        "401":
          content:
            application/json:
              examples:
                "401Example":
                  $ref: '#/components/examples/401Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "403":
          content:
            application/json:
              examples:
                "401Example":
                  $ref: '#/components/examples/403Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: User not authorized to access the service
        "500":
          content:
            application/json:
              examples:
                "500Example":
                  $ref: '#/components/examples/500Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error occurred
      security:
      - Bearer: []
      tags:
      - security
      x-accepts: application/json
  /api/kafkas_mgmt/v1/sso_providers:
    get:
      description: Return sso provider info
      operationId: getSsoProviders
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SsoProvider'
          description: Returned list of supported cloud providers
        "401":
          content:
            application/json:
              examples:
                "401Example":
                  $ref: '#/components/examples/401Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "500":
          content:
            application/json:
              examples:
                "500Example":
                  $ref: '#/components/examples/500Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error occurred
      tags:
      - security
      x-accepts: application/json
  /api/kafkas_mgmt/v1/kafkas/{id}/metrics/query_range:
    get:
      description: Returns metrics with timeseries range query by Kafka ID
      operationId: getMetricsByRangeQuery
      parameters:
      - description: The ID of record
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The length of time in minutes for which to return the metrics
        examples:
          duration:
            value: 5
        explode: true
        in: query
        name: duration
        required: true
        schema:
          default: 5
          format: int64
          maximum: 4320
          minimum: 1
          type: integer
        style: form
      - description: The interval in seconds between data points
        examples:
          interval:
            value: 30
        explode: true
        in: query
        name: interval
        required: true
        schema:
          default: 30
          format: int64
          maximum: 10800
          minimum: 1
          type: integer
        style: form
      - description: List of metrics to fetch. Fetch all metrics when empty. List
          entries are Kafka internal metric names.
        explode: true
        in: query
        name: filters
        required: false
        schema:
          default: []
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsRangeQueryList'
          description: Returned JSON array of Prometheus metrics objects from observatorium
        "401":
          content:
            application/json:
              examples:
                "401Example":
                  $ref: '#/components/examples/401Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "500":
          content:
            application/json:
              examples:
                "500Example":
                  $ref: '#/components/examples/500Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error occurred
      security:
      - Bearer: []
      x-accepts: application/json
  /api/kafkas_mgmt/v1/kafkas/{id}/metrics/query:
    get:
      description: Returns metrics with instant query by Kafka ID
      operationId: getMetricsByInstantQuery
      parameters:
      - description: The ID of record
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: List of metrics to fetch. Fetch all metrics when empty. List
          entries are Kafka internal metric names.
        explode: true
        in: query
        name: filters
        required: false
        schema:
          default: []
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsInstantQueryList'
          description: Returned JSON array of Prometheus metrics objects from observatorium
        "401":
          content:
            application/json:
              examples:
                "401Example":
                  $ref: '#/components/examples/401Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "500":
          content:
            application/json:
              examples:
                "500Example":
                  $ref: '#/components/examples/500Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error occurred
      security:
      - Bearer: []
      x-accepts: application/json
  /api/kafkas_mgmt/v1/kafkas/{id}/metrics/federate:
    get:
      description: Returns all metrics in scrapeable format for a given kafka id
      operationId: federateMetrics
      parameters:
      - description: The ID of record
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: Returned Kafka metrics in a Prometheus text format
        "400":
          content:
            application/json:
              examples:
                MissingParameterExample:
                  $ref: '#/components/examples/400MissingParameterExample'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "401":
          content:
            application/json:
              examples:
                "401Example":
                  $ref: '#/components/examples/401Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "404":
          content:
            application/json:
              examples:
                "404Example":
                  $ref: '#/components/examples/404Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Kafka id not found
        "500":
          content:
            application/json:
              examples:
                "500Example":
                  $ref: '#/components/examples/500Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error occurred
      security:
      - Bearer: []
      x-accepts: application/json
  /api/kafkas_mgmt/v1/clusters:
    get:
      description: List all Enterprise data plane clusters
      operationId: getEnterpriseOsdClusters
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnterpriseClusterList'
          description: List Enterprise data plane clusters
        "400":
          content:
            application/json:
              examples:
                InvalidQueryExample:
                  $ref: '#/components/examples/400InvalidQueryExample'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "401":
          content:
            application/json:
              examples:
                "401Example":
                  $ref: '#/components/examples/401Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "403":
          content:
            application/json:
              examples:
                "403Example":
                  $ref: '#/components/examples/403Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: User not authorized to access the service
        "500":
          content:
            application/json:
              examples:
                "500Example":
                  $ref: '#/components/examples/500Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error occurred
      security:
      - Bearer: []
      tags:
      - enterprise-dataplane-clusters
      x-accepts: application/json
    post:
      description: Register enterprise data plane cluster
      operationId: registerEnterpriseOsdCluster
      requestBody:
        content:
          application/json:
            examples:
              EnterpriseOsdClusterPayloadExample:
                $ref: '#/components/examples/EnterpriseOsdClusterPayloadExample'
            schema:
              $ref: '#/components/schemas/EnterpriseOsdClusterPayload'
        description: Enterprise data plane cluster details
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnterpriseClusterWithAddonParameters'
          description: Enterprise cluster registered
        "400":
          content:
            application/json:
              examples:
                "400InvalidClusterIdExample":
                  $ref: '#/components/examples/400InvalidClusterIdExample'
                "400InvalidExternalClusterIdExample":
                  $ref: '#/components/examples/400InvalidExternalClusterIdExample'
              schema:
                $ref: '#/components/schemas/Error'
          description: Validation errors occurred
        "401":
          content:
            application/json:
              examples:
                "401Example":
                  $ref: '#/components/examples/401Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "403":
          content:
            application/json:
              examples:
                "403Example":
                  $ref: '#/components/examples/403Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: User is not authorized to access the service
        "409":
          content:
            application/json:
              examples:
                "409ClusterIdConflictExample":
                  $ref: '#/components/examples/409ClusterIdConflictExample'
              schema:
                $ref: '#/components/schemas/Error'
          description: A conflict has been detected in the creation of this resource
        "500":
          content:
            application/json:
              examples:
                "500Example":
                  $ref: '#/components/examples/500Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: An unexpected error occurred while registering Enterprise cluster
      security:
      - Bearer: []
      tags:
      - enterprise-dataplane-clusters
      x-contentType: application/json
      x-accepts: application/json
  /api/kafkas_mgmt/v1/clusters/{id}:
    delete:
      operationId: deleteEnterpriseClusterById
      parameters:
      - description: Perform the action in an asynchronous manner
        explode: true
        in: query
        name: async
        required: true
        schema:
          type: boolean
        style: form
      - description: ID of the enterprise data plane cluster
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Enterprise cluster deletion accepted
        "400":
          content:
            application/json:
              examples:
                "400DeletionExample":
                  $ref: '#/components/examples/400DeletionExample'
              schema:
                $ref: '#/components/schemas/Error'
          description: Validation errors occurred
        "401":
          content:
            application/json:
              examples:
                "401Example":
                  $ref: '#/components/examples/401Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "403":
          content:
            application/json:
              examples:
                "403Example":
                  $ref: '#/components/examples/403Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: User not authorized to access the service
        "404":
          content:
            application/json:
              examples:
                "404DeleteExample":
                  $ref: '#/components/examples/404DeleteExample'
              schema:
                $ref: '#/components/schemas/Error'
          description: No Enterprise cluster with specified ID exists
        "500":
          content:
            application/json:
              examples:
                "500DeleteExample":
                  $ref: '#/components/examples/500DeleteExample'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error occurred
      security:
      - Bearer: []
      tags:
      - enterprise-dataplane-clusters
      x-accepts: application/json
    get:
      description: Returns enterprise data plane cluster by ID
      operationId: getEnterpriseClusterById
      parameters:
      - description: ID of the enterprise data plane cluster
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                EnterpriseClusterExample:
                  $ref: '#/components/examples/EnterpriseClusterExample'
              schema:
                $ref: '#/components/schemas/EnterpriseCluster'
          description: Found enterprise data plane cluster with provided ID
        "401":
          content:
            application/json:
              examples:
                "401Example":
                  $ref: '#/components/examples/401Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "403":
          content:
            application/json:
              examples:
                "403Example":
                  $ref: '#/components/examples/403Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: User not authorized to access the service
        "404":
          content:
            application/json:
              examples:
                "404Example":
                  $ref: '#/components/examples/404Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: No Enterprise data plane cluster with specified ID exists
        "500":
          content:
            application/json:
              examples:
                "500Example":
                  $ref: '#/components/examples/500Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error occurred
      security:
      - Bearer: []
      tags:
      - enterprise-dataplane-clusters
      x-accepts: application/json
  /api/kafkas_mgmt/v1/clusters/{id}/addon_parameters:
    get:
      description: Returns enterprise data plane cluster by ID along with its addon
        parameters
      operationId: getEnterpriseClusterWithAddonParameters
      parameters:
      - description: ID of the enterprise data plane cluster
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                EnterpriseClusterWithAddonsExample:
                  $ref: '#/components/examples/EnterpriseClusterWithAddonParametersExample'
              schema:
                $ref: '#/components/schemas/EnterpriseClusterWithAddonParameters'
          description: Returns the enterprise data plane cluster with addon parameters
            for an existing enterprise data plane cluster with provided ID
        "401":
          content:
            application/json:
              examples:
                "401Example":
                  $ref: '#/components/examples/401Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "403":
          content:
            application/json:
              examples:
                "403Example":
                  $ref: '#/components/examples/403Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: User not authorized to access the service
        "404":
          content:
            application/json:
              examples:
                "404Example":
                  $ref: '#/components/examples/404Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: No Enterprise data plane cluster with specified ID exists
        "500":
          content:
            application/json:
              examples:
                "500Example":
                  $ref: '#/components/examples/500Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error occurred
      security:
      - Bearer: []
      tags:
      - enterprise-dataplane-clusters
      x-accepts: application/json
components:
  examples:
    USRegionExample:
      value:
        region: us-east-1
        cloud_provider: aws
        name: serviceapitest
    EURegionExample:
      value:
        region: eu-west-1
        cloud_provider: aws
        name: serviceapitest
    ExplicitSizeExample:
      value:
        region: us-east-1
        cloud_provider: aws
        name: test_kafka
        plan: standard.x1
    EnterpriseClusterExample:
      value:
        id: abcd1234ascd3456fdks9485lskd030h
        kind: cluster
        href: /api/kafkas_mgmr/v1/clusters/abcd1234ascd3456fdks9485lskd030h
        status: ready
        cluster_id: abcd1234ascd3456fdks9485lskd030h
    EnterpriseClusterWithAddonParametersExample:
      value:
        id: abcd1234ascd3456fdks9485lskd030h
        kind: cluster
        href: /api/kafkas_mgmr/v1/clusters/abcd1234ascd3456fdks9485lskd030h
        status: ready
        cluster_id: abcd1234ascd3456fdks9485lskd030h
        access_kafkas_via_private_network: true
        fleetshard_parameters:
        - id: sso-auth-server-url
          value: http://someurl/auth/realms/rhoas
        - id: sso-client-id
          value: kas-fleetshard-agent-1234abcd1234abcd1234abcd1234abcd
        - id: sso-secret
          value: some-secret
        - id: cluster-id
          value: 1234abcd1234abcd1234abcd1234abcd
        - id: poll-interval
          value: 15s
        - id: resync-interval
          value: 60s
    KafkaRequestExample:
      value:
        id: 1iSY6RQ3JKI8Q0OTmjQFd3ocFRg
        kind: kafka
        href: /api/kafkas_mgmt/v1/kafkas/1iSY6RQ3JKI8Q0OTmjQFd3ocFRg
        status: ready
        cloud_provider: aws
        multi_az: true
        region: us-east-1
        owner: api_kafka_service
        name: serviceapi
        bootstrap_server_host: serviceapi-1isy6rq3jki8q0otmjqfd3ocfrg.apps.mk-bttg0jn170hp.x5u8.s1.devshift.org
        admin_api_server_url: https://admin-server-mk-e-e-e-e-c---{}ld{-}-n-vp--bltg.rhcloud.com
        created_at: 2020-10-05T12:51:24.053142Z
        updated_at: 2020-10-05T12:56:36.362208Z
        version: 2.6.0
        instance_type: standard
        browser_url: https://console.redhat.com/application-services/streams/kafkas/1isy6rq3jki8q0otmjqfd3ocfrg/dashboard
        reauthentication_enabled: true
        max_data_retention_size:
          bytes: 1073741824000
        size_id: x1
        ingress_throughput_per_sec: 2Mi
        egress_throughput_per_sec: 2Mi
        total_max_connections: 100
        max_partitions: 100
        max_data_retention_period: P14D
        max_connection_attempts_per_sec: 100
        billing_cloud_account_id: "123456789012"
        marketplace: aws
        billing_model: marketplace
        cluster_id: 21grk30a21grk30a21grk30a21grk30a
    KafkaRequestFailedCreationStatusExample:
      value:
        id: 1iSY6RQ3JKI8Q0OTmjQFd3ocFRg
        kind: kafka
        href: /api/kafkas_mgmt/v1/kafkas/1iSY6RQ3JKI8Q0OTmjQFd3ocFRg
        status: failed
        cloud_provider: aws
        multi_az: true
        region: us-east-1
        owner: api_kafka_service
        name: serviceapi
        bootstrap_server_host: serviceapi-1isy6rq3jki8q0otmjqfd3ocfrg.apps.mk-bttg0jn170hp.x5u8.s1.devshift.org
        admin_api_server_url: https://admin-server-mk-e-e-e-e-c---{}ld{-}-n-vp--bltg.rhcloud.com
        created_at: 2020-10-05T12:51:24.053142Z
        updated_at: 2020-10-05T12:56:36.362208Z
        failed_reason: a reason the Kafka request creation failed
        instance_type: standard
        reauthentication_enabled: true
    KafkaPromoteRequestExample:
      value:
        desired_kafka_billing_model: marketplace
        desired_marketplace: aws
        desired_billing_cloud_account_id: "123456"
    SupportedKafkaInstanceTypeListExample:
      value:
        id: developer
        display_name: Trial
        supported_billing_models:
        - id: standard
          ams_resource: rhosak
          ams_product: RHOSAKTrial
          ams_billing_models:
          - standard
        sizes:
        - id: x1
          display_name: "1"
          ingress_throughput_per_sec:
            bytes: 31457280
          egress_throughput_per_sec:
            bytes: 31457280
          total_max_connections: 3000
          max_data_retention_size:
            bytes: 1073741800000
          max_partitions: 1000
          max_data_retention_period: P14D
          max_connection_attempts_per_sec: 100
          quota_consumed: 1
          quota_type: rhosak
          capacity_consumed: 1
          max_message_size:
            bytes: 1048576
          min_in_sync_replicas: 1
          replication_factor: 1
          supported_az_modes:
          - single
          - multi
          maturity_status: stable
    CloudProviderExample:
      value:
        kind: CloudProvider
        id: aws
        name: aws
        display_name: Amazon Web Services
        enabled: true
    CloudRegionExample:
      value:
        kind: CloudRegion
        id: us-east-1
        display_name: US East, N. Virginia
        enabled: true
        capacity:
        - instance_type: standard
          available_sizes:
          - x1
          - x2
    ServiceAccountRequestExample:
      value:
        name: my-app-sa
        description: service account for my app
    ServiceAccountExample:
      value:
        id: "1"
        kind: ServiceAccount
        href: /api/kafkas_mgmt/v1/serviceaccounts/1
        name: my-app-sa
        description: service account for my app
        client_id: SA-121212
        client_secret: secret
        owner: test-user
        created_by: test-user
        created_at: 2021-04-07T16:24:01+05:30
    SsoProviderExample:
      value:
        name: mas_sso
        base_url: https://identity.api.redhat.com
        jwks: https://identity.api.openshift.com/auth/realms/rhoas/protocol/openid-connect/certs
        token_url: https://identity.api.openshift.com/auth/realms/rhoas/protocol/openid-connect/token
        valid_issuer: https://identity.api.openshift.com/auth/realms/rhoas
    ServiceAccountByIdExample:
      value:
        id: "1"
        kind: ServiceAccount
        href: /api/kafkas_mgmt/v1/serviceaccounts/1
        name: my-app-sa
        description: service account for my app
        client_id: SA-121212
        owner: test-user
        created_by: test-user
        created_at: 2021-04-07T16:24:01+05:30
    ServiceAccountListItemExample:
      value:
        id: "1"
        kind: ServiceAccountListItem
        href: /api/kafkas_mgmt/v1/serviceaccounts/1
        name: my-app-sa
        description: service account for my app
        client_id: SA-121212
        owner: test-user
        created_by: test-user
        created_at: 2021-04-07T16:24:01+05:30
    MetricsRangeQueryExample:
      value:
        metric:
          __name__: kafka_server_brokertopicmetrics_bytes_in_total
          strimzi_io_cluster: kafka-service
          topic: __consumer_offsets
        values:
        - timestamp: 1611670230000
          value: 84154
        - timestamp: 1611670260000
          value: 85888
        - timestamp: 1611670290000
          value: 87622
    MetricsInstantQueryExample:
      value:
        metric:
          __name__: kafka_server_brokertopicmetrics_bytes_in_total
          strimzi_io_cluster: kafka-service
          topic: __consumer_offsets
        timestamp: 1611670230000
        value: 84154
    "400DeletionExample":
      value:
        id: "103"
        kind: Error
        href: /api/kafkas_mgmt/v1/errors/103
        code: KAFKAS-MGMT-103
        reason: Synchronous action is not supported, use async=true parameter
        operation_id: 1iWIimqGcrDuL61aUxIZqBTqNRa
    "400CreationExample":
      value:
        id: "103"
        kind: Error
        href: /api/kafkas_mgmt/v1/errors/103
        code: KAFKAS-MGMT-103
        reason: Synchronous action is not supported, use async=true parameter
        operation_id: 1iWIimqGcrDuL61aUxIZqBTqNRa
    "400InvalidQueryExample":
      value:
        id: "23"
        kind: Error
        href: /api/kafkas_mgmt/v1/errors/23
        code: KAFKAS-MGMT-23
        reason: 'Failed to parse search query: Unable to list Kafka requests for api_kafka_service:
          KAFKAS-MGMT-23: Failed to parse search query: Unsupported column name for
          search: ''id''. Supported column names are: region, name, cloud_provider,
          name, status. Query invalid: id = 123'
        operation_id: 1lWDGuybIrEnxrAem724gqkkiDv
    "400UnsupportedProviderExample":
      value:
        id: "30"
        kind: Error
        href: /api/kafkas_mgmt/v1/errors/30
        code: KAFKAS-MGMT-30
        reason: Provider not supported
        operation_id: c980htvgvcn9kf51d0n0
    "400UnsupportedRegionExample":
      value:
        id: "31"
        kind: Error
        href: /api/kafkas_mgmt/v1/errors/31
        code: KAFKAS-MGMT-31
        reason: Region not supported
        operation_id: c980htvgvcn9kf51d0n0
    "400MissingParameterExample":
      value:
        id: "21"
        kind: Error
        href: /api/kafkas_mgmt/v1/errors/21
        code: KAFKAS-MGMT-21
        reason: 'missing path parameter: kafka id'
        operation_id: 1lWDGuybIrEnxrAem724gqkkiDv
    "400InvalidClusterIdExample":
      value:
        id: "45"
        kind: Error
        href: /api/kafkas_mgmt/v1/errors/45
        code: KAFKAS-MGMT-45
        reason: Enterprise cluster ID is invalid
        operation_id: 1lWDGuybIrEnxrAem724gqkkiDv
    "400InvalidExternalClusterIdExample":
      value:
        id: "46"
        kind: Error
        href: /api/kafkas_mgmt/v1/errors/46
        code: KAFKAS-MGMT-46
        reason: Enterprise external cluster ID is invalid
        operation_id: 1lWDGuybIrEnxrAem724gqkkiDv
    "404Example":
      value:
        id: "7"
        kind: Error
        href: /api/kafkas_mgmt/v1/errors/7
        code: KAFKAS-MGMT-7
        reason: The requested resource doesn't exist
    "404DeleteExample":
      value:
        id: "7"
        kind: Error
        href: /api/kafkas_mgmt/v1/errors/7
        code: KAFKAS-MGMT-7
        reason: KafkaResource with id='1iK3duVYIvv5YvLlyz1mGR3JyqN' not found
        operation_id: 1iYO7g2g6HTdUKUa2ksH82kQD3y
    "401Example":
      value:
        id: "11"
        kind: Error
        href: /api/kafkas_mgmt/v1/errors/11
        code: KAFKAS-MGMT-11
        reason: 'Unable to verify JWT token: Required authorization token not found'
        operation_id: 1iY3UhEhwmXBpWPfI2lNekpd4ZD
    "403Example":
      value:
        id: "4"
        kind: Error
        href: /api/kafkas_mgmt/v1/errors/4
        code: KAFKAS-MGMT-4
        reason: User 'foo-bar' is not authorized to access the service.
        operation_id: 1lY3UiEhznXBpWPfI2lNejpd4YC
    "403MaxAllowedInstanceReachedExample":
      value:
        id: "5"
        kind: Error
        href: /api/kafkas_mgmt/v1/errors/5
        code: KAFKAS-MGMT-5
        reason: User 'foo-bar' has reached a maximum number of 6 allowed streaming
          units.
        operation_id: 1lY3UiEkxnXBpVPeI2oNejd3XB
    "403TermsNotAcceptedExample":
      value:
        id: "12"
        kind: Error
        href: /api/kafkas_mgmt/v1/errors/12
        code: KAFKAS-MGMT-12
        reason: Required terms have not been accepted
        operation_id: kXCzWPeI2oXBpVPeI2LvF9jMQY
    "409NameConflictExample":
      value:
        id: "36"
        kind: Error
        href: /api/kafkas_mgmt/v1/errors/36
        code: KAFKAS-MGMT-36
        reason: Kafka cluster name is already used
        operation_id: 6kY0UiEkzkXCzWPeI2oYehd3ED
    "409ClusterIdConflictExample":
      value:
        id: "44"
        kind: Error
        href: /api/kafkas_mgmt/v1/errors/44
        code: KAFKAS-MGMT-44
        reason: Enterprise cluster ID is already used
        operation_id: 6kY0UiEkzkXCzWPeI2oYehd3ED
    "500Example":
      value:
        id: "9"
        kind: Error
        href: /api/kafkas_mgmt/v1/errors/9
        code: KAFKAS-MGMT-9
        reason: Unspecified error
        operation_id: 1ieELvF9jMQY6YghfM9gGRsHvEW
    "500DeleteExample":
      value:
        id: "9"
        kind: Error
        href: /api/kafkas_mgmt/v1/errors/9
        code: KAFKAS-MGMT-9
        reason: 'error deleting syncset: OCM-EX-9: failed to delete syncset: ext-serviceapi-1ix03lndlmq0qfc7sita5sljv8e
          for cluster id: 1g5d88q0lrcdv4g7alb7slfgnj3dhbsj%!(EXTRA *errors.Error=identifier
          is ''404'', code is ''CLUSTERS-MGMT-404'' and operation identifier is ''1g5or50viu07oealuehrkc26dgftj1ac'':
          Cluster ''1g5d88q0lrcdv4g7alb7slfgnj3dhbsj'' not found)'
        operation_id: 1iYTsWry6nsqb2sNmFj5bXpD7Ca
    EnterpriseOsdClusterPayloadExample:
      value:
        cluster_id: 1234abcd1234abcd1234abcd1234abcd
        cluster_external_id: 69d631de-9b7f-4bc2-bf4f-4d3295a7b25e
        cluster_ingress_dns_name: apps.enterprise-aws.awdk.s1.devshift.org
        kafka_machine_pool_node_count: 9
        access_kafkas_via_private_network: false
  parameters:
    id:
      description: The ID of record
      explode: false
      in: path
      name: id
      required: true
      schema:
        type: string
      style: simple
    duration:
      description: The length of time in minutes for which to return the metrics
      examples:
        duration:
          value: 5
      explode: true
      in: query
      name: duration
      required: true
      schema:
        default: 5
        format: int64
        maximum: 4320
        minimum: 1
        type: integer
      style: form
    interval:
      description: The interval in seconds between data points
      examples:
        interval:
          value: 30
      explode: true
      in: query
      name: interval
      required: true
      schema:
        default: 30
        format: int64
        maximum: 10800
        minimum: 1
        type: integer
      style: form
    filters:
      description: List of metrics to fetch. Fetch all metrics when empty. List entries
        are Kafka internal metric names.
      explode: true
      in: query
      name: filters
      required: false
      schema:
        default: []
        items:
          type: string
        type: array
      style: form
    page:
      description: Page index
      examples:
        page:
          value: "1"
      explode: true
      in: query
      name: page
      required: false
      schema:
        type: string
      style: form
    size:
      description: Number of items in each page
      examples:
        size:
          value: "100"
      explode: true
      in: query
      name: size
      required: false
      schema:
        type: string
      style: form
    orderBy:
      description: |-
        Specifies the order by criteria. The syntax of this parameter is
        similar to the syntax of the `order by` clause of an SQL statement.
        Each query can be ordered by any of the following `kafkaRequests` fields:

        * bootstrap_server_host
        * admin_api_server_url
        * cloud_provider
        * cluster_id
        * created_at
        * href
        * id
        * instance_type
        * multi_az
        * name
        * organisation_id
        * owner
        * reauthentication_enabled
        * region
        * status
        * updated_at
        * version

        For example, to return all Kafka instances ordered by their name, use the following syntax:

        ```sql
        name asc
        ```

        To return all Kafka instances ordered by their name _and_ created date, use the following syntax:

        ```sql
        name asc, created_at asc
        ```

        If the parameter isn't provided, or if the value is empty, then
        the results are ordered by name.
      examples:
        orderBy:
          value: name asc
      explode: true
      in: query
      name: orderBy
      required: false
      schema:
        type: string
      style: form
    search:
      description: |
        Search criteria.

        The syntax of this parameter is similar to the syntax of the `where` clause of an
        SQL statement. Allowed fields in the search are `cloud_provider`, `name`, `owner`, `region`, and `status`. Allowed comparators are `<>`, `=`, `LIKE`, or `ILIKE`.
        Allowed joins are `AND` and `OR`. However, you can use a maximum of 10 joins in a search query.

        Examples:

        To return a Kafka instance with the name `my-kafka` and the region `aws`, use the following syntax:

        ```
        name = my-kafka and cloud_provider = aws
        ```[p-]

        To return a Kafka instance with a name that starts with `my`, use the following syntax:

        ```
        name like my%25
        ```

        To return a Kafka instance with a name containing `test` matching any character case combinations, use the following syntax:

        ```
        name ilike %25test%25
        ```

        If the parameter isn't provided, or if the value is empty, then all the Kafka instances
        that the user has permission to see are returned.

        Note. If the query is invalid, an error is returned.
      examples:
        search:
          value: name = my-kafka and cloud_provider = aws
      explode: true
      in: query
      name: search
      required: false
      schema:
        type: string
      style: form
  schemas:
    ObjectReference:
      properties:
        id:
          type: string
        kind:
          type: string
        href:
          type: string
      required:
      - href
      - id
      - kind
      type: object
    List:
      properties:
        kind:
          type: string
        page:
          type: integer
        size:
          type: integer
        total:
          type: integer
      required:
      - kind
      - page
      - size
      - total
      type: object
    Error:
      example:
        reason: reason
        code: code
        kind: kind
        operation_id: operation_id
        id: id
        href: href
      properties:
        reason:
          description: Human-readable description of the error. Intended for human
            consumption
          type: string
        operation_id:
          description: Relatively unique operation ID of the request associated to
            the error
          type: string
        id:
          description: The unique and immutable identifier of the resource
          type: string
        kind:
          description: The kind of the resource
          type: string
        href:
          description: The absolute path of the resource
          type: string
        code:
          description: Code of the error
          type: string
      required:
      - code
      - href
      - id
      - kind
      - reason
      type: object
    ErrorList:
      allOf:
      - $ref: '#/components/schemas/List'
      - $ref: '#/components/schemas/ErrorList_allOf'
    KafkaRequest:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - $ref: '#/components/schemas/KafkaRequest_allOf'
    KafkaRequestList:
      allOf:
      - $ref: '#/components/schemas/List'
      - $ref: '#/components/schemas/KafkaRequestList_allOf'
    EnterpriseClusterList:
      allOf:
      - $ref: '#/components/schemas/List'
      - $ref: '#/components/schemas/EnterpriseClusterList_allOf'
    EnterpriseCluster:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - $ref: '#/components/schemas/EnterpriseCluster_allOf'
    VersionMetadata:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - $ref: '#/components/schemas/VersionMetadata_allOf'
    KafkaRequestPayload:
      description: Schema for the request body sent to /kafkas POST
      example:
        reauthentication_enabled: true
        cluster_id: cluster_id
        marketplace: marketplace
        billing_model: billing_model
        billing_cloud_account_id: billing_cloud_account_id
        name: name
        cloud_provider: cloud_provider
        region: region
        plan: plan
      properties:
        cloud_provider:
          description: The cloud provider where the Kafka cluster will be created
            in
          type: string
        name:
          description: The name of the Kafka cluster. It must consist of lower-case
            alphanumeric characters or '-', start with an alphabetic character, and
            end with an alphanumeric character, and can not be longer than 32 characters.
          type: string
        region:
          description: The region where the Kafka cluster will be created in
          type: string
        reauthentication_enabled:
          description: Whether connection reauthentication is enabled or not. If set
            to true, connection reauthentication on the Kafka instance will be required
            every 5 minutes. The default value is true
          nullable: true
          type: boolean
        plan:
          description: kafka plan in a format of <instance_type>.<size_id>
          type: string
        billing_cloud_account_id:
          description: cloud account id used to purchase the instance
          nullable: true
          type: string
        marketplace:
          description: marketplace where the instance is purchased on
          nullable: true
          type: string
        billing_model:
          description: billing model to use
          nullable: true
          type: string
        cluster_id:
          description: enterprise OSD cluster ID to be used for kafka creation
          nullable: true
          type: string
      required:
      - name
      type: object
    KafkaPromoteRequest:
      example:
        desired_billing_cloud_account_id: desired_billing_cloud_account_id
        desired_marketplace: desired_marketplace
        desired_kafka_billing_model: desired_kafka_billing_model
      properties:
        desired_kafka_billing_model:
          description: 'The desired Kafka billing model to promote the kafka instance
            to. Promotion is performed asynchronously. Accepted values: [''marketplace'',
            ''standard'']'
          minLength: 1
          type: string
        desired_marketplace:
          description: 'The desired billing marketplace to promote the kafka instance
            to. Accepted values: [''aws'', ''rhm'']. Only considered when desired_kafka_billing_model
            is ''marketplace'''
          minLength: 1
          type: string
        desired_billing_cloud_account_id:
          description: The desired Kafka billing cloud account ID to promote the kafka
            instance to. Only considered when desired_kafka_billing_model is 'marketplace'
          minLength: 1
          type: string
      required:
      - desired_kafka_billing_model
      type: object
    SupportedKafkaInstanceTypesList:
      allOf:
      - $ref: '#/components/schemas/SupportedKafkaInstanceTypesList_allOf'
    SupportedKafkaInstanceType:
      description: Supported Kafka instance type
      properties:
        id:
          description: Unique identifier of the Kafka instance type.
          type: string
        display_name:
          description: Human readable name of the supported Kafka instance type
          type: string
        supported_billing_models:
          description: A list of available kafka billing models for the instance type.
            Each kafka billing model item has a unique 'id'
          items:
            $ref: '#/components/schemas/SupportedKafkaBillingModel'
          minItems: 1
          type: array
        sizes:
          description: A list of Kafka instance sizes available for this instance
            type
          items:
            allOf:
            - $ref: '#/components/schemas/SupportedKafkaSize'
          type: array
      required:
      - supported_billing_models
      type: object
    SupportedKafkaBillingModel:
      description: Supported Kafka Billing Model
      properties:
        id:
          description: Identifier for the Kafka billing model
          minLength: 1
          type: string
        ams_resource:
          description: 'AMS resource to be used. Accepted values: [''rhosak'']'
          minLength: 1
          type: string
        ams_product:
          description: 'AMS product to be used. Accepted values: [''RHOSAK'', ''RHOSAKTrial'',
            ''RHOSAKEval'', ''RHOSAKCC'']'
          minLength: 1
          type: string
        ams_billing_models:
          description: 'List of AMS available billing models: Accepted values: [''marketplace'',
            ''marketplace-rhm'', ''marketplace-aws'']'
          items:
            minLength: 1
            type: string
          minItems: 1
          type: array
      required:
      - ams_billing_models
      - ams_product
      - ams_resource
      - id
      type: object
    SupportedKafkaSize:
      description: Supported Kafka Size
      properties:
        id:
          description: Unique identifier of this Kafka instance size.
          type: string
        display_name:
          description: Display name of this Kafka instance size.
          type: string
        ingress_throughput_per_sec:
          $ref: '#/components/schemas/SupportedKafkaSizeBytesValueItem'
        egress_throughput_per_sec:
          $ref: '#/components/schemas/SupportedKafkaSizeBytesValueItem'
        total_max_connections:
          description: Maximum amount of total connections available to this Kafka
            instance size.
          type: integer
        max_data_retention_size:
          $ref: '#/components/schemas/SupportedKafkaSizeBytesValueItem'
        max_partitions:
          description: Maximum amount of total partitions available to this Kafka
            instance size.
          type: integer
        max_data_retention_period:
          description: Maximum data retention period available to this Kafka instance
            size.
          type: string
        max_connection_attempts_per_sec:
          description: Maximium connection attempts per second available to this Kafka
            instance size.
          type: integer
        max_message_size:
          $ref: '#/components/schemas/SupportedKafkaSizeBytesValueItem'
        min_in_sync_replicas:
          description: Minimum number of in-sync replicas.
          type: integer
        replication_factor:
          description: Replication factor available to this Kafka instance size.
          type: integer
        supported_az_modes:
          description: List of Availability Zone modes that this Kafka instance size
            supports. The possible values are "single", "multi".
          items:
            type: string
          type: array
        lifespan_seconds:
          description: The limit lifespan of the kafka instance in seconds. If not
            specified then the instance never expires.
          nullable: true
          type: integer
        quota_consumed:
          description: Quota consumed by this Kafka instance size.
          type: integer
        capacity_consumed:
          description: Data plane cluster capacity consumed by this Kafka instance
            size.
          type: integer
        maturity_status:
          description: Maturity level of the size. Can be "stable" or "preview".
          type: string
      type: object
    SupportedKafkaSizeBytesValueItem:
      properties:
        bytes:
          format: int64
          type: integer
      type: object
    CloudProviderList:
      allOf:
      - $ref: '#/components/schemas/List'
      - $ref: '#/components/schemas/CloudProviderList_allOf'
    CloudRegionList:
      allOf:
      - $ref: '#/components/schemas/List'
      - $ref: '#/components/schemas/CloudRegionList_allOf'
    CloudProvider:
      description: Cloud provider.
      properties:
        kind:
          description: Indicates the type of this object. Will be 'CloudProvider'
            link.
          type: string
        id:
          description: Unique identifier of the object.
          type: string
        display_name:
          description: Name of the cloud provider for display purposes.
          type: string
        name:
          description: Human friendly identifier of the cloud provider, for example
            `aws`.
          type: string
        enabled:
          description: Whether the cloud provider is enabled for deploying an OSD
            cluster.
          type: boolean
      required:
      - enabled
    CloudRegion:
      description: Description of a region of a cloud provider.
      properties:
        kind:
          description: Indicates the type of this object. Will be 'CloudRegion'.
          type: string
        id:
          description: Unique identifier of the object.
          type: string
        display_name:
          description: Name of the region for display purposes, for example `N. Virginia`.
          type: string
        enabled:
          default: false
          description: Whether the region is enabled for deploying an OSD cluster.
          type: boolean
        capacity:
          description: Indicates whether there is capacity left per instance type
          items:
            $ref: '#/components/schemas/RegionCapacityListItem'
          type: array
      required:
      - capacity
      - enabled
    ServiceAccount:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - $ref: '#/components/schemas/ServiceAccount_allOf'
      description: Service Account created in MAS-SSO for the Kafka Cluster for authentication
    ServiceAccountRequest:
      description: Schema for the request to create a service account
      example:
        $ref: '#/components/examples/ServiceAccountRequestExample'
      properties:
        name:
          description: The name of the service account
          type: string
        description:
          description: A description for the service account
          type: string
      required:
      - name
      type: object
    RegionCapacityListItem:
      description: schema for a kafka instance type capacity in region
      properties:
        instance_type:
          description: kafka instance type
          type: string
        available_sizes:
          description: list of available Kafka instance sizes that can be created
            in this region when taking account current capacity and regional limits
          items:
            type: string
          type: array
      required:
      - available_sizes
      - instance_type
      type: object
    ServiceAccountListItem:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - $ref: '#/components/schemas/ServiceAccountListItem_allOf'
    ServiceAccountList:
      allOf:
      - $ref: '#/components/schemas/ServiceAccountList_allOf'
    SsoProvider:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - $ref: '#/components/schemas/SsoProvider_allOf'
      description: SSO Provider
    MetricsRangeQueryList:
      allOf:
      - $ref: '#/components/schemas/MetricsRangeQueryList_allOf'
    RangeQuery:
      properties:
        metric:
          additionalProperties:
            type: string
          type: object
        values:
          items:
            $ref: '#/components/schemas/Values'
          type: array
      type: object
    Values:
      properties:
        timestamp:
          format: int64
          type: integer
        value:
          format: double
          type: number
      required:
      - value
      type: object
    MetricsInstantQueryList:
      allOf:
      - $ref: '#/components/schemas/MetricsInstantQueryList_allOf'
    InstantQuery:
      properties:
        metric:
          additionalProperties:
            type: string
          type: object
        timestamp:
          format: int64
          type: integer
        value:
          format: double
          type: number
      required:
      - value
      type: object
    KafkaUpdateRequest:
      example:
        owner: owner
        reauthentication_enabled: true
      properties:
        owner:
          nullable: true
          type: string
        reauthentication_enabled:
          description: Whether connection reauthentication is enabled or not. If set
            to true, connection reauthentication on the Kafka instance will be required
            every 5 minutes.
          nullable: true
          type: boolean
      type: object
    EnterpriseOsdClusterPayload:
      description: Schema for the request body sent to /clusters POST
      example:
        kafka_machine_pool_node_count: 0
        cluster_id: cluster_id
        cluster_external_id: cluster_external_id
        access_kafkas_via_private_network: true
        cluster_ingress_dns_name: cluster_ingress_dns_name
      properties:
        access_kafkas_via_private_network:
          description: Sets whether Kafkas created on this data plane cluster have
            to be accessed via private network
          type: boolean
        cluster_id:
          description: The data plane cluster ID. This is the ID of the cluster obtained
            from OpenShift Cluster Manager (OCM) API
          type: string
        cluster_external_id:
          description: external cluster ID. Can be obtained from the response JSON
            of OCM get /api/clusters_mgmt/v1/clusters/<cluster_id>
          type: string
        cluster_ingress_dns_name:
          description: dns name of the cluster. Can be obtained from the response
            JSON of the /api/clusters_mgmt/v1/clusters/<cluster_id>/ingresses (dns_name)
          type: string
        kafka_machine_pool_node_count:
          description: "The node count given to the created kafka machine pool. \n\
            The machine pool must be created via /api/clusters_mgmt/v1/clusters/<cluster_id>/machine_pools\
            \ prior to passing this value.\nThe created machine pool must have a `bf2.org/kafkaInstanceProfileType=standard`\
            \ label and a `bf2.org/kafkaInstanceProfileType=standard:NoExecute` taint.\n\
            The name of the machine pool must be `kafka-standard` \nThe node count\
            \ value has to be a multiple of 3 with a minimum of 3 nodes."
          format: int32
          type: integer
      required:
      - access_kafkas_via_private_network
      - cluster_external_id
      - cluster_id
      - cluster_ingress_dns_name
      - kafka_machine_pool_node_count
      type: object
    EnterpriseClusterWithAddonParameters:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - $ref: '#/components/schemas/EnterpriseClusterWithAddonParameters_allOf'
      description: Enterprise cluster with addon parameters
    FleetshardParameter:
      description: Fleetshard parameter consumed by enterprise cluster
      properties:
        id:
          type: string
        value:
          type: string
      type: object
    ErrorList_allOf:
      properties:
        items:
          items:
            $ref: '#/components/schemas/Error'
          type: array
      required:
      - items
      type: object
    KafkaRequest_allOf:
      example:
        $ref: '#/components/examples/KafkaRequestExample'
      properties:
        status:
          description: 'Values: [accepted, preparing, provisioning, ready, failed,
            deprovision, deleting, suspending, suspended, resuming] '
          type: string
        cloud_provider:
          description: Name of Cloud used to deploy. For example AWS
          type: string
        multi_az:
          type: boolean
        region:
          description: 'Values will be regions of specific cloud provider. For example:
            us-east-1 for AWS'
          type: string
        owner:
          type: string
        name:
          type: string
        bootstrap_server_host:
          type: string
        admin_api_server_url:
          description: The kafka admin server url to perform kafka admin operations
            e.g acl management etc. The value will be available when the Kafka has
            been fully provisioned i.e it reaches a 'ready' state
          type: string
        created_at:
          format: date-time
          type: string
        expires_at:
          format: date-time
          nullable: true
          type: string
        updated_at:
          format: date-time
          type: string
        failed_reason:
          type: string
        version:
          type: string
        instance_type:
          type: string
        reauthentication_enabled:
          type: boolean
        max_data_retention_size:
          $ref: '#/components/schemas/SupportedKafkaSizeBytesValueItem'
        browser_url:
          type: string
        size_id:
          type: string
        billing_cloud_account_id:
          type: string
        marketplace:
          type: string
        billing_model:
          type: string
        promotion_status:
          description: 'Status of the Kafka request promotion. Possible values: [''promoting'',
            ''failed'']. If unset it means no promotion is in progress.'
          type: string
        cluster_id:
          description: The ID of the data plane where Kafka is deployed on. This information
            is only returned for kafka whose billing model is enterprise
          nullable: true
          type: string
        promotion_details:
          description: Details of the Kafka request promotion. It can be set when
            a Kafka request promotion is in progress or has failed
          type: string
      required:
      - multi_az
      - reauthentication_enabled
      type: object
    KafkaRequestList_allOf:
      example:
        kind: KafkaRequestList
        page: "1"
        size: "1"
        total: "1"
        item:
          $ref: '#/components/examples/KafkaRequestExample'
      properties:
        items:
          items:
            allOf:
            - $ref: '#/components/schemas/KafkaRequest'
          type: array
      required:
      - items
      type: object
    EnterpriseClusterList_allOf:
      example:
        kind: ClusterList
        page: "1"
        size: "1"
        total: "1"
        item:
          $ref: '#/components/examples/EnterpriseClusterExample'
      properties:
        items:
          items:
            allOf:
            - $ref: '#/components/schemas/EnterpriseCluster'
          type: array
      required:
      - items
      type: object
    EnterpriseCluster_allOf:
      properties:
        access_kafkas_via_private_network:
          description: Indicates whether Kafkas created on this data plane cluster
            have to be accessed via private network
          type: boolean
        cluster_id:
          description: ocm cluster id of the registered Enterprise cluster
          type: string
        status:
          description: status of registered Enterprise cluster
          type: string
      required:
      - access_kafkas_via_private_network
      type: object
    VersionMetadata_allOf:
      example:
        kind: APIVersion
        id: v1
        href: /api/kafkas_mgmt/v1
        server_version: 24a263e8631d713b3104c1a70c143644ab91de6f
        collections:
        - id: kafkas
          href: /api/kafkas_mgmt/v1/kafkas
          kind: KafkaList
      properties:
        server_version:
          type: string
        collections:
          items:
            allOf:
            - $ref: '#/components/schemas/ObjectReference'
          type: array
      type: object
    SupportedKafkaInstanceTypesList_allOf:
      example:
        instance_types:
          $ref: '#/components/examples/SupportedKafkaInstanceTypeListExample'
      properties:
        instance_types:
          items:
            allOf:
            - $ref: '#/components/schemas/SupportedKafkaInstanceType'
          type: array
      required:
      - items
      type: object
    CloudProviderList_allOf:
      example:
        kind: CloudProviderList
        page: "1"
        size: "1"
        total: "1"
        item:
          $ref: '#/components/examples/CloudProviderExample'
      properties:
        items:
          items:
            allOf:
            - $ref: '#/components/schemas/CloudProvider'
          type: array
      required:
      - items
      type: object
    CloudRegionList_allOf:
      example:
        kind: CloudRegionList
        page: "1"
        size: "1"
        total: "1"
        item:
          $ref: '#/components/examples/CloudRegionExample'
      properties:
        items:
          items:
            allOf:
            - $ref: '#/components/schemas/CloudRegion'
          type: array
      required:
      - items
      type: object
    ServiceAccount_allOf:
      example:
        $ref: '#/components/examples/ServiceAccountExample'
      properties:
        id:
          description: server generated unique id of the service account
          type: string
        name:
          type: string
        description:
          type: string
        client_id:
          type: string
        client_secret:
          type: string
        created_by:
          type: string
        created_at:
          format: date-time
          type: string
      type: object
    ServiceAccountListItem_allOf:
      properties:
        id:
          description: server generated unique id of the service account
          type: string
        client_id:
          description: client id of the service account
          type: string
        name:
          description: name of the service account
          type: string
        created_by:
          description: service account created by the user
          type: string
        created_at:
          description: service account creation timestamp
          format: date-time
          type: string
        description:
          description: description of the service account
          type: string
      type: object
    ServiceAccountList_allOf:
      example:
        kind: ServiceAccountList
        items:
        - $ref: '#/components/examples/ServiceAccountListItemExample'
      properties:
        kind:
          type: string
        items:
          items:
            allOf:
            - $ref: '#/components/schemas/ServiceAccountListItem'
          type: array
      required:
      - items
      - kind
      type: object
    SsoProvider_allOf:
      example:
        $ref: '#/components/examples/SsoProviderExample'
      properties:
        name:
          description: name of the sso provider
          type: string
        base_url:
          description: base url
          type: string
        token_url:
          type: string
        jwks:
          type: string
        valid_issuer:
          type: string
      type: object
    MetricsRangeQueryList_allOf:
      example:
        kind: MetricsRangeQueryList
        id: 1nbpS70HduPe4l0to8jSg2CLzfu
        items:
          $ref: '#/components/examples/MetricsRangeQueryExample'
      properties:
        kind:
          type: string
        id:
          type: string
        items:
          items:
            allOf:
            - $ref: '#/components/schemas/RangeQuery'
          type: array
      type: object
    MetricsInstantQueryList_allOf:
      example:
        kind: MetricsInstantQueryList
        id: 1nbpS70HduPe4l0to8jSg2CLzfu
        items:
          $ref: '#/components/examples/MetricsInstantQueryExample'
      properties:
        kind:
          type: string
        id:
          type: string
        items:
          items:
            allOf:
            - $ref: '#/components/schemas/InstantQuery'
          type: array
      type: object
    EnterpriseClusterWithAddonParameters_allOf:
      properties:
        access_kafkas_via_private_network:
          description: Indicates whether Kafkas created on this data plane cluster
            have to be accessed via private network
          type: boolean
        cluster_id:
          description: OCM cluster id of the registered Enterprise cluster
          type: string
        status:
          description: status of registered Enterprise cluster
          type: string
        fleetshard_parameters:
          items:
            allOf:
            - $ref: '#/components/schemas/FleetshardParameter'
          type: array
      required:
      - access_kafkas_via_private_network
      type: object
  securitySchemes:
    Bearer:
      bearerFormat: JWT
      scheme: bearer
      type: http

