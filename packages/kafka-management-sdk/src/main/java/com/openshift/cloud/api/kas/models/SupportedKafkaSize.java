/*
 * Kafka Service Fleet Manager
 * Kafka Service Fleet Manager is a Rest API to manage Kafka instances.
 *
 * The version of the OpenAPI document: 1.5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.openshift.cloud.api.kas.models;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.openshift.cloud.api.kas.models.SupportedKafkaSizeBytesValueItem;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Supported Kafka Size
 */
@ApiModel(description = "Supported Kafka Size")
@JsonPropertyOrder({
  SupportedKafkaSize.JSON_PROPERTY_ID,
  SupportedKafkaSize.JSON_PROPERTY_INGRESS_THROUGHPUT_PER_SEC,
  SupportedKafkaSize.JSON_PROPERTY_EGRESS_THROUGHPUT_PER_SEC,
  SupportedKafkaSize.JSON_PROPERTY_TOTAL_MAX_CONNECTIONS,
  SupportedKafkaSize.JSON_PROPERTY_MAX_DATA_RETENTION_SIZE,
  SupportedKafkaSize.JSON_PROPERTY_MAX_PARTITIONS,
  SupportedKafkaSize.JSON_PROPERTY_MAX_DATA_RETENTION_PERIOD,
  SupportedKafkaSize.JSON_PROPERTY_MAX_CONNECTION_ATTEMPTS_PER_SEC,
  SupportedKafkaSize.JSON_PROPERTY_QUOTA_CONSUMED,
  SupportedKafkaSize.JSON_PROPERTY_QUOTA_TYPE,
  SupportedKafkaSize.JSON_PROPERTY_CAPACITY_CONSUMED
})
@JsonTypeName("SupportedKafkaSize")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SupportedKafkaSize {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_INGRESS_THROUGHPUT_PER_SEC = "ingress_throughput_per_sec";
  private SupportedKafkaSizeBytesValueItem ingressThroughputPerSec;

  public static final String JSON_PROPERTY_EGRESS_THROUGHPUT_PER_SEC = "egress_throughput_per_sec";
  private SupportedKafkaSizeBytesValueItem egressThroughputPerSec;

  public static final String JSON_PROPERTY_TOTAL_MAX_CONNECTIONS = "total_max_connections";
  private Integer totalMaxConnections;

  public static final String JSON_PROPERTY_MAX_DATA_RETENTION_SIZE = "max_data_retention_size";
  private SupportedKafkaSizeBytesValueItem maxDataRetentionSize;

  public static final String JSON_PROPERTY_MAX_PARTITIONS = "max_partitions";
  private Integer maxPartitions;

  public static final String JSON_PROPERTY_MAX_DATA_RETENTION_PERIOD = "max_data_retention_period";
  private String maxDataRetentionPeriod;

  public static final String JSON_PROPERTY_MAX_CONNECTION_ATTEMPTS_PER_SEC = "max_connection_attempts_per_sec";
  private Integer maxConnectionAttemptsPerSec;

  public static final String JSON_PROPERTY_QUOTA_CONSUMED = "quota_consumed";
  private Integer quotaConsumed;

  public static final String JSON_PROPERTY_QUOTA_TYPE = "quota_type";
  private String quotaType;

  public static final String JSON_PROPERTY_CAPACITY_CONSUMED = "capacity_consumed";
  private Integer capacityConsumed;

  public SupportedKafkaSize() { 
  }

  public SupportedKafkaSize id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Unique identifier of this Kafka instance size.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unique identifier of this Kafka instance size.")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public SupportedKafkaSize ingressThroughputPerSec(SupportedKafkaSizeBytesValueItem ingressThroughputPerSec) {
    
    this.ingressThroughputPerSec = ingressThroughputPerSec;
    return this;
  }

   /**
   * Get ingressThroughputPerSec
   * @return ingressThroughputPerSec
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_INGRESS_THROUGHPUT_PER_SEC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SupportedKafkaSizeBytesValueItem getIngressThroughputPerSec() {
    return ingressThroughputPerSec;
  }


  @JsonProperty(JSON_PROPERTY_INGRESS_THROUGHPUT_PER_SEC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIngressThroughputPerSec(SupportedKafkaSizeBytesValueItem ingressThroughputPerSec) {
    this.ingressThroughputPerSec = ingressThroughputPerSec;
  }


  public SupportedKafkaSize egressThroughputPerSec(SupportedKafkaSizeBytesValueItem egressThroughputPerSec) {
    
    this.egressThroughputPerSec = egressThroughputPerSec;
    return this;
  }

   /**
   * Get egressThroughputPerSec
   * @return egressThroughputPerSec
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_EGRESS_THROUGHPUT_PER_SEC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SupportedKafkaSizeBytesValueItem getEgressThroughputPerSec() {
    return egressThroughputPerSec;
  }


  @JsonProperty(JSON_PROPERTY_EGRESS_THROUGHPUT_PER_SEC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEgressThroughputPerSec(SupportedKafkaSizeBytesValueItem egressThroughputPerSec) {
    this.egressThroughputPerSec = egressThroughputPerSec;
  }


  public SupportedKafkaSize totalMaxConnections(Integer totalMaxConnections) {
    
    this.totalMaxConnections = totalMaxConnections;
    return this;
  }

   /**
   * Maximum amount of total connections available to this Kafka instance size.
   * @return totalMaxConnections
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Maximum amount of total connections available to this Kafka instance size.")
  @JsonProperty(JSON_PROPERTY_TOTAL_MAX_CONNECTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTotalMaxConnections() {
    return totalMaxConnections;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_MAX_CONNECTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalMaxConnections(Integer totalMaxConnections) {
    this.totalMaxConnections = totalMaxConnections;
  }


  public SupportedKafkaSize maxDataRetentionSize(SupportedKafkaSizeBytesValueItem maxDataRetentionSize) {
    
    this.maxDataRetentionSize = maxDataRetentionSize;
    return this;
  }

   /**
   * Get maxDataRetentionSize
   * @return maxDataRetentionSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_MAX_DATA_RETENTION_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SupportedKafkaSizeBytesValueItem getMaxDataRetentionSize() {
    return maxDataRetentionSize;
  }


  @JsonProperty(JSON_PROPERTY_MAX_DATA_RETENTION_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaxDataRetentionSize(SupportedKafkaSizeBytesValueItem maxDataRetentionSize) {
    this.maxDataRetentionSize = maxDataRetentionSize;
  }


  public SupportedKafkaSize maxPartitions(Integer maxPartitions) {
    
    this.maxPartitions = maxPartitions;
    return this;
  }

   /**
   * Maximum amount of total partitions available to this Kafka instance size.
   * @return maxPartitions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Maximum amount of total partitions available to this Kafka instance size.")
  @JsonProperty(JSON_PROPERTY_MAX_PARTITIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMaxPartitions() {
    return maxPartitions;
  }


  @JsonProperty(JSON_PROPERTY_MAX_PARTITIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaxPartitions(Integer maxPartitions) {
    this.maxPartitions = maxPartitions;
  }


  public SupportedKafkaSize maxDataRetentionPeriod(String maxDataRetentionPeriod) {
    
    this.maxDataRetentionPeriod = maxDataRetentionPeriod;
    return this;
  }

   /**
   * Maximum data retention period available to this Kafka instance size.
   * @return maxDataRetentionPeriod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Maximum data retention period available to this Kafka instance size.")
  @JsonProperty(JSON_PROPERTY_MAX_DATA_RETENTION_PERIOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMaxDataRetentionPeriod() {
    return maxDataRetentionPeriod;
  }


  @JsonProperty(JSON_PROPERTY_MAX_DATA_RETENTION_PERIOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaxDataRetentionPeriod(String maxDataRetentionPeriod) {
    this.maxDataRetentionPeriod = maxDataRetentionPeriod;
  }


  public SupportedKafkaSize maxConnectionAttemptsPerSec(Integer maxConnectionAttemptsPerSec) {
    
    this.maxConnectionAttemptsPerSec = maxConnectionAttemptsPerSec;
    return this;
  }

   /**
   * Maximium connection attempts per second available to this Kafka instance size.
   * @return maxConnectionAttemptsPerSec
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Maximium connection attempts per second available to this Kafka instance size.")
  @JsonProperty(JSON_PROPERTY_MAX_CONNECTION_ATTEMPTS_PER_SEC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMaxConnectionAttemptsPerSec() {
    return maxConnectionAttemptsPerSec;
  }


  @JsonProperty(JSON_PROPERTY_MAX_CONNECTION_ATTEMPTS_PER_SEC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaxConnectionAttemptsPerSec(Integer maxConnectionAttemptsPerSec) {
    this.maxConnectionAttemptsPerSec = maxConnectionAttemptsPerSec;
  }


  public SupportedKafkaSize quotaConsumed(Integer quotaConsumed) {
    
    this.quotaConsumed = quotaConsumed;
    return this;
  }

   /**
   * Quota consumed by this Kafka instance size.
   * @return quotaConsumed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Quota consumed by this Kafka instance size.")
  @JsonProperty(JSON_PROPERTY_QUOTA_CONSUMED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getQuotaConsumed() {
    return quotaConsumed;
  }


  @JsonProperty(JSON_PROPERTY_QUOTA_CONSUMED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQuotaConsumed(Integer quotaConsumed) {
    this.quotaConsumed = quotaConsumed;
  }


  public SupportedKafkaSize quotaType(String quotaType) {
    
    this.quotaType = quotaType;
    return this;
  }

   /**
   * Quota type used by this Kafka instance size.
   * @return quotaType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Quota type used by this Kafka instance size.")
  @JsonProperty(JSON_PROPERTY_QUOTA_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getQuotaType() {
    return quotaType;
  }


  @JsonProperty(JSON_PROPERTY_QUOTA_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQuotaType(String quotaType) {
    this.quotaType = quotaType;
  }


  public SupportedKafkaSize capacityConsumed(Integer capacityConsumed) {
    
    this.capacityConsumed = capacityConsumed;
    return this;
  }

   /**
   * Data plane cluster capacity consumed by this Kafka instance size.
   * @return capacityConsumed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Data plane cluster capacity consumed by this Kafka instance size.")
  @JsonProperty(JSON_PROPERTY_CAPACITY_CONSUMED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getCapacityConsumed() {
    return capacityConsumed;
  }


  @JsonProperty(JSON_PROPERTY_CAPACITY_CONSUMED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCapacityConsumed(Integer capacityConsumed) {
    this.capacityConsumed = capacityConsumed;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SupportedKafkaSize supportedKafkaSize = (SupportedKafkaSize) o;
    return Objects.equals(this.id, supportedKafkaSize.id) &&
        Objects.equals(this.ingressThroughputPerSec, supportedKafkaSize.ingressThroughputPerSec) &&
        Objects.equals(this.egressThroughputPerSec, supportedKafkaSize.egressThroughputPerSec) &&
        Objects.equals(this.totalMaxConnections, supportedKafkaSize.totalMaxConnections) &&
        Objects.equals(this.maxDataRetentionSize, supportedKafkaSize.maxDataRetentionSize) &&
        Objects.equals(this.maxPartitions, supportedKafkaSize.maxPartitions) &&
        Objects.equals(this.maxDataRetentionPeriod, supportedKafkaSize.maxDataRetentionPeriod) &&
        Objects.equals(this.maxConnectionAttemptsPerSec, supportedKafkaSize.maxConnectionAttemptsPerSec) &&
        Objects.equals(this.quotaConsumed, supportedKafkaSize.quotaConsumed) &&
        Objects.equals(this.quotaType, supportedKafkaSize.quotaType) &&
        Objects.equals(this.capacityConsumed, supportedKafkaSize.capacityConsumed);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, ingressThroughputPerSec, egressThroughputPerSec, totalMaxConnections, maxDataRetentionSize, maxPartitions, maxDataRetentionPeriod, maxConnectionAttemptsPerSec, quotaConsumed, quotaType, capacityConsumed);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SupportedKafkaSize {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    ingressThroughputPerSec: ").append(toIndentedString(ingressThroughputPerSec)).append("\n");
    sb.append("    egressThroughputPerSec: ").append(toIndentedString(egressThroughputPerSec)).append("\n");
    sb.append("    totalMaxConnections: ").append(toIndentedString(totalMaxConnections)).append("\n");
    sb.append("    maxDataRetentionSize: ").append(toIndentedString(maxDataRetentionSize)).append("\n");
    sb.append("    maxPartitions: ").append(toIndentedString(maxPartitions)).append("\n");
    sb.append("    maxDataRetentionPeriod: ").append(toIndentedString(maxDataRetentionPeriod)).append("\n");
    sb.append("    maxConnectionAttemptsPerSec: ").append(toIndentedString(maxConnectionAttemptsPerSec)).append("\n");
    sb.append("    quotaConsumed: ").append(toIndentedString(quotaConsumed)).append("\n");
    sb.append("    quotaType: ").append(toIndentedString(quotaType)).append("\n");
    sb.append("    capacityConsumed: ").append(toIndentedString(capacityConsumed)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

